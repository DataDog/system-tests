[project]
name = 'system_tests'
version = '0.0.1'

[tool.setuptools]
packages = ["tests", "utils", "manifests"]

[tool.black]
line-length = 120
exclude = "(venv/|utils/grpc/weblog_pb2_grpc.py|utils/grpc/weblog_pb2.py|parametric/apps|parametric/protos/)"

[tool.pytest.ini_options]
addopts = "--json-report --json-report-indent=2 --color=yes --no-header --junitxml=reportJunit.xml -r Xf"
testpaths = [
    "tests",
]
# log_cli = True
# log_cli_level = DEBUG
log_level = "DEBUG"
log_format = "%(asctime)s.%(msecs)03d %(levelname)-8s %(message)s"
log_date_format = "%H:%M:%S"
log_file_format = "%(asctime)s.%(msecs)03d %(levelname)-8s %(message)s"
log_file_date_format = "%H:%M:%S"

junit_family = "xunit2"
junit_logging = "no"
junit_duration_report = "call"
junit_suite_name = "system_tests_suite"

markers =[
    "scenario: run a test only for a specified scenario",
    "features: declare the feature id"
]

python_files = "test_*.py *utils.py"

# migration tooling: list of folders where feature declarations are mandatory
# once every test class got its feature declaration, we can remove this
allow_no_feature_nodes = [
    "tests/apm_tracing_e2e/test_single_span.py",
    "tests/apm_tracing_e2e/test_smoke.py",
    "tests/otel_tracing_e2e/test_e2e.py",
    "tests/parametric/test_span_links.py",
    "tests/parametric/test_tracer.py",
    "tests/perfs/test_performances.py",  # exotic scenario, not really used
    "tests/test_library_logs.py",  # we do not have a real feature to attach
    "tests/test_miscs.py",  # we do not have a real feature to attach
    "tests/test_schemas.py",  # Too broad test, can't attach to a feature
    "tests/test_smoke.py",  # Too broad test, can't attach to a feature
    "tests/test_the_test/",  # Not a real test
]

allow_no_jira_ticket_for_bugs = [
    "tests/apm_tracing_e2e/test_otel.py::Test_Otel_Span.test_datadog_otel_span",
    "tests/appsec/iast/source/test_body.py::TestRequestBody.test_source_reported",
    "tests/appsec/iast/source/test_parameter_name.py::TestParameterName.test_source_get_reported",
    "tests/appsec/iast/source/test_parameter_name.py::TestParameterName.test_source_post_reported",
    "tests/appsec/iast/source/test_parameter_name.py::TestParameterName.test_source_reported",
    "tests/appsec/iast/source/test_parameter_value.py::TestParameterValue.test_source_post_reported",
    "tests/appsec/test_alpha.py::Test_Basic.test_headers",
    "tests/appsec/test_asm_standalone.py::Test_AppSecStandalone_UpstreamPropagation.test_any_upstream_propagation__with_attack__raises_priority_to_2__from_0",
    "tests/appsec/test_asm_standalone.py::Test_AppSecStandalone_UpstreamPropagation.test_any_upstream_propagation__with_attack__raises_priority_to_2__from_1",
    "tests/appsec/test_asm_standalone.py::Test_AppSecStandalone_UpstreamPropagation.test_any_upstream_propagation__with_attack__raises_priority_to_2__from_minus_1",
    "tests/appsec/test_asm_standalone.py::Test_AppSecStandalone_UpstreamPropagation.test_no_upstream_appsec_propagation__with_attack__is_kept_with_priority_2__from_0",
    "tests/appsec/test_asm_standalone.py::Test_AppSecStandalone_UpstreamPropagation.test_no_upstream_appsec_propagation__with_attack__is_kept_with_priority_2__from_minus_1",
    "tests/appsec/test_blocking_addresses.py::Test_Blocking_request_method.test_blocking_before",
    "tests/appsec/test_rate_limiter.py::Test_Main.test_main",
    "tests/appsec/test_reports.py::Test_Info",
    "tests/appsec/test_reports.py::Test_RequestHeaders",
    "tests/appsec/test_reports.py::Test_StatusCode",
    "tests/appsec/test_runtime_activation.py::Test_RuntimeActivation",
    "tests/appsec/test_shell_execution.py::Test_ShellExecution.test_truncate_1st_argument",
    "tests/appsec/test_shell_execution.py::Test_ShellExecution.test_truncate_blank_2nd_argument",
    "tests/appsec/test_traces.py::Test_AppSecEventSpanTags.test_header_collection",
    "tests/appsec/test_traces.py::Test_RetainTraces",
    "tests/appsec/test_user_blocking_full_denylist.py::Test_UserBlocking_FullDenylist.test_blocking_test",
    "tests/appsec/waf/test_addresses.py::Test_BodyJson",
    "tests/appsec/waf/test_addresses.py::Test_BodyUrlEncoded",
    "tests/appsec/waf/test_addresses.py::Test_BodyXml",
    "tests/appsec/waf/test_addresses.py::Test_BodyXml.test_xml_attr_value",
    "tests/appsec/waf/test_addresses.py::Test_BodyXml.test_xml_content",
    "tests/appsec/waf/test_miscs.py::Test_404",
    "tests/appsec/waf/test_rules.py::Test_SQLI.test_sqli3",
    "tests/auto_inject/test_auto_inject_install.py::TestContainerAutoInjectInstallScript.test_install",
    "tests/auto_inject/test_auto_inject_install.py::TestInstallerAutoInjectManual.test_install_uninstall",
    "tests/auto_inject/test_auto_inject_install.py::TestSimpleInstallerAutoInjectManual.test_install",
    "tests/debugger/test_debugger_pii.py::Test_Debugger_PII_Redaction.test_pii_redaction_dotnet_2_50",
    "tests/integrations/test_cassandra.py::Test_Cassandra",
    "tests/integrations/test_db_integrations_sql.py::Test_MsSql.test_db_name",
    "tests/integrations/test_db_integrations_sql.py::Test_MsSql.test_db_system",
    "tests/integrations/test_db_integrations_sql.py::Test_MsSql.test_db_user",
    "tests/integrations/test_db_integrations_sql.py::Test_MySql.test_db_name",
    "tests/integrations/test_db_integrations_sql.py::Test_MySql.test_db_user",
    "tests/integrations/test_db_integrations_sql.py::Test_Postgres.test_db_type",
    "tests/integrations/test_dbm.py::Test_Dbm.test_trace_payload_service",
    "tests/integrations/test_dsm.py::Test_DsmRabbitmq.test_dsm_rabbitmq",
    "tests/integrations/test_mongo.py::Test_Mongo",
    "tests/integrations/test_open_telemetry.py::_BaseOtelDbIntegrationTestClass.test_db_operation",
    "tests/integrations/test_open_telemetry.py::Test_MsSql.test_db_operation",
    "tests/integrations/test_open_telemetry.py::Test_MsSql.test_resource",
    "tests/integrations/test_sql.py::Test_Sql",
    "tests/k8s_lib_injection/test_k8s_init_image_validator.py::TestK8sInitImageValidator.test_valid_weblog_instrumented",
    "tests/k8s_lib_injection/test_k8s_init_image_validator.py::TestK8sInitImageValidatorUnsupported.test_invalid_weblog_not_instrumented",

    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigSamplingRules.test_remote_sampling_rules_retention",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigSamplingRules.test_trace_sampling_rules_override_env",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigSamplingRules.test_trace_sampling_rules_override_rate",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigSamplingRules.test_trace_sampling_rules_with_tags",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigTracingEnabled.test_tracing_client_tracing_disable_one_way",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigV1_ServiceTargets.test_not_match_service_target",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigV1.test_trace_sampling_rate_override_env",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigV1.test_trace_sampling_rate_with_sampling_rules",
    "tests/parametric/test_headers_precedence.py::Test_Headers_Precedence.test_headers_precedence_propagationstyle_default_tracecontext_datadog",
    "tests/parametric/test_headers_precedence.py::Test_Headers_Precedence.test_headers_precedence_propagationstyle_tracecontext_last_extract_first_true_correctly_propagates_tracestate",
    "tests/parametric/test_headers_tracestate_dd.py::Test_Headers_Tracestate_DD.test_headers_tracestate_dd_evicts_32_or_greater_list_members",
    "tests/parametric/test_headers_tracestate_dd.py::Test_Headers_Tracestate_DD.test_headers_tracestate_dd_keeps_32_or_fewer_list_members",
    "tests/parametric/test_otel_span_methods.py::Test_Otel_Span_Methods.test_otel_span_started_with_link_from_other_spans",
    "tests/parametric/test_otel_span_methods.py::Test_Otel_Span_Methods.test_otel_span_started_with_link_from_w3c_headers",
    "tests/parametric/test_partial_flushing.py::Test_Partial_Flushing.test_partial_flushing_one_span_default",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_appsec_enabled_sst011",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_child_dropped_sst001",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_child_kept_sst007",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_defaults_rate_1_and_rate_limit_0_sst008",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_defaults_rate_1_and_rate_limit_3_and_rule_0_sst009",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_defaults_rate_1_and_rate_limit_3_sst010",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_defaults_rate_1_and_rule_0_sst006",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_defaults_rate_1_and_rule_1_sst005",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_defaults_rate_1_sst003",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_defaults_rate_tiny_sst004",
    "tests/parametric/test_sampling_span_tags.py::Test_Sampling_Span_Tags.test_tags_defaults_sst002",
    "tests/parametric/test_span_sampling.py::Test_Span_Sampling.test_multi_rule_independent_rate_limiters_sss013",
    "tests/parametric/test_span_sampling.py::Test_Span_Sampling.test_single_rule_rate_limiter_span_sampling_sss008",
    "tests/parametric/test_trace_sampling.py::Test_Trace_Sampling_Tags_Feb2024_Revision.test_globs_different_casing",
    "tests/parametric/test_trace_sampling.py::Test_Trace_Sampling_Tags_Feb2024_Revision.test_metric_existence",
    "tests/parametric/test_trace_sampling.py::Test_Trace_Sampling_Tags_Feb2024_Revision.test_metric_matching",
    "tests/remote_config/test_remote_configuration.py::Test_RemoteConfigurationUpdateSequenceFeatures.test_tracer_update_sequence",
    "tests/stats/test_miscs.py::Test_Miscs.test_request_headers",
    "tests/test_data_integrity.py::Test_TraceHeaders.test_trace_header_container_tags",
    "tests/test_identify.py::Test_Basic.test_identify_tags",
    "tests/test_sampling_rates.py::Test_SamplingDecisions.test_sampling_decision",
    "tests/test_sampling_rates.py::Test_SamplingDecisions.test_sampling_determinism",
    "tests/test_sampling_rates.py::Test_SamplingRates.test_sampling_rates",
    "tests/test_schemas.py::Test_Agent.test_agent_schema_telemetry_main_payload",
    "tests/test_semantic_conventions.py::Test_Meta.test_meta_component_tag",
    "tests/test_semantic_conventions.py::Test_Meta.test_meta_http_url",
    "tests/test_semantic_conventions.py::Test_Meta.test_meta_language_tag",
    "tests/test_semantic_conventions.py::Test_Meta.test_meta_runtime_id_tag",
    "tests/test_semantic_conventions.py::Test_Meta.test_meta_span_kind",
    "tests/test_standard_tags.py::Test_StandardTagsClientIp.test_client_ip",
    "tests/test_standard_tags.py::Test_StandardTagsClientIp.test_client_ip_vendor",
    "tests/test_standard_tags.py::Test_StandardTagsMethod.test_method_trace",
    "tests/test_telemetry.py::Test_Telemetry.test_proxy_forwarding",
    "tests/test_telemetry.py::Test_MessageBatch.test_message_batch_enabled",
    "tests/test_telemetry.py::Test_Telemetry.test_app_dependencies_loaded",
    "tests/test_telemetry.py::Test_Telemetry.test_app_heartbeats_delays",
    "tests/test_telemetry.py::Test_Telemetry.test_app_started_is_first_message",
    "tests/test_telemetry.py::Test_Telemetry.test_status_ok",
    "tests/test_telemetry.py::Test_Telemetry.test_telemetry_proxy_enrichment",
    "tests/test_telemetry.py::Test_TelemetryV2.test_telemetry_v2_required_headers",
    "tests/test_the_test/",

    "tests/appsec/rasp/test_lfi.py::Test_Lfi_RC_CustomAction",
    "tests/test_profiling.py::Test_Profile",
    "tests/parametric/test_partial_flushing.py::Test_Partial_Flushing",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigHeaderTags",
    "tests/debugger/test_debugger_expression_language.py::Test_Debugger_Expression_Language",
    "tests/test_semantic_conventions.py::Test_MetaDatadogTags",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigTracingEnabled",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigV1",
    "tests/parametric/test_dynamic_configuration.py::TestDynamicConfigV2",
    "tests/appsec/test_blocking_addresses.py::Test_Suspicious_Request_Blocking",
    "tests/appsec/iast/source/test_cookie_value.py::TestCookieValue",
    "tests/appsec/iast/source/test_header_value.py::TestHeaderValue",
    "tests/appsec/iast/source/test_parameter_value.py::TestParameterValue",
    "tests/appsec/test_suspicious_attacker_blocking.py::Test_Suspicious_Attacker_Blocking",
    "tests/appsec/iast/sink/test_xcontent_sniffing.py::Test_XContentSniffing",
    "tests/appsec/iast/sink/test_insecure_auth_protocol.py::Test_InsecureAuthProtocol",
    "tests/appsec/test_blocking_addresses.py::Test_Blocking_request_body_multipart",
    "tests/parametric/test_config_consistency.py::Test_Config_TraceLogDirectory",
    "tests/appsec/test_blocking_addresses.py::Test_Blocking_request_body",
]

[tool.pylint]
init-hook='import sys; sys.path.append(".")'
max-line-length = 120
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "fixme",
    "raise-missing-from",
    "invalid-name",
    "import-outside-toplevel",
    "logging-fstring-interpolation",
    "broad-except",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches,",
    "bare-except",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-public-methods",
    "too-many-nested-blocks",
    "too-many-return-statements",
    "duplicate-code",
    "abstract-method",
    "inconsistent-return-statements", # because lot of validator function returns nothing
    "unused-argument", # pain, as there are some function that MUST have a prototype. TODO...
    "attribute-defined-outside-init",
    "no-name-in-module",  # full of bug
    "import-error",  # full of bug
]
ignore-paths = [
    "utils/parametric/protos/.*"  # generated by grpc
]
generated-members = [
    "pb\\.(DistributedHTTPHeaders|FlushSpansArgs|FlushTraceStatsArgs|HeaderTuple|InjectHeadersArgs)",
    "pb\\.(StartSpanArgs|StopTracerArgs|SpanSetMetaArgs|SpanSetMetricArgs|SpanSetErrorArgs|FinishSpanArgs)",
    "pb\\.(Otel.*|ListVal|AttrVal|Attributes)",
    "(ok_summary|err_summary)\\.mapping",
    "Span\\.__annotations__"
]
