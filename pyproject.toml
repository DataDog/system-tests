[tool.black]
line-length = 120
exclude = "(venv/|utils/grpc/weblog_pb2_grpc.py|utils/grpc/weblog_pb2.py|parametric/apps|parametric/protos/)"

[tool.pytest.ini_options]
addopts = "--json-report --json-report-indent=2 --color=yes --no-header --junitxml=reportJunit.xml -r Xf"
testpaths = [
    "tests",
]
# log_cli = True
# log_cli_level = DEBUG
log_level = "DEBUG"
log_format = "%(asctime)s.%(msecs)03d %(levelname)-8s %(message)s"
log_date_format = "%H:%M:%S"
log_file_format = "%(asctime)s.%(msecs)03d %(levelname)-8s %(message)s"
log_file_date_format = "%H:%M:%S"

junit_family = "xunit2"
junit_logging = "no"
junit_duration_report = "call"
junit_suite_name = "system_tests_suite"

markers =[
    "scenario: run a test only for a specified scenario",
    "features: declare the feature id"
]

python_files = "test_*.py _test_*.py"

# migration tooling: list of folders where feature declarations are mandatory
# once every test class got its feature declaration, we can remove this
allow_no_feature_nodes = [
    "tests/apm_tracing_e2e/test_single_span.py",
    "tests/apm_tracing_e2e/test_smoke.py",
    "tests/otel_tracing_e2e/test_e2e.py",
    "tests/parametric/test_span_links.py",
    "tests/parametric/test_tracer.py",
    "tests/perfs/test_performances.py",  # exotic scenario, not really used
    "tests/test_library_logs.py",  # we do not have a real feature to attach
    "tests/test_miscs.py",  # we do not have a real feature to attach
    "tests/test_schemas.py",  # Too broad test, can't attach to a feature
    "tests/test_smoke.py",  # Too broad test, can't attach to a feature
    "tests/test_the_test/",  # Not a real test
]

[tool.pylint]
init-hook='import sys; sys.path.append(".")'
max-line-length = 120
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "fixme",
    "raise-missing-from",
    "invalid-name",
    "import-outside-toplevel",
    "logging-fstring-interpolation",
    "broad-except",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches,",
    "bare-except",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-public-methods",
    "too-many-nested-blocks",
    "too-many-return-statements",
    "duplicate-code",
    "abstract-method",
    "inconsistent-return-statements", # because lot of validator function returns nothing
    "unused-argument", # pain, as there are some function that MUST have a prototype. TODO...
    "attribute-defined-outside-init",
]
ignore-paths = [
    "utils/parametric/protos/.*"  # generated by grpc
]
generated-members = [
    "pb\\.(DistributedHTTPHeaders|FlushSpansArgs|FlushTraceStatsArgs|HeaderTuple|InjectHeadersArgs)",
    "pb\\.(StartSpanArgs|StopTracerArgs|SpanSetMetaArgs|SpanSetMetricArgs|SpanSetErrorArgs|FinishSpanArgs)",
    "pb\\.(Otel.*|ListVal|AttrVal|Attributes)",
    "(ok_summary|err_summary)\\.mapping",
    "Span\\.__annotations__"
]
