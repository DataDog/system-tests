FROM alpine as binaries_arm64
RUN mkdir /binaries
ONBUILD COPY binaries/*.aarch64.rpm binaries/README.md /binaries/

FROM alpine as binaries_amd64
RUN mkdir /binaries
ONBUILD COPY binaries/*.x86_64.rpm binaries/README.md /binaries/

ARG TARGETARCH
FROM binaries_${TARGETARCH} as binaries

FROM ubuntu:24.04 as single_step_instrumentation
ARG TARGETARCH
ARG LIB_INIT_ENV=prod
ARG LIB
ENV LIB=$LIB
RUN apt-get update && apt-get -y install curl gpg
RUN if [ $LIB = "java" ]; then apt-get update && apt-get -y install openjdk-11-jdk ; fi

#Mock the agent folder and user. Requirement for datadog-apm-inject
RUN mkdir -p /etc/datadog-agent/inject
RUN useradd -ms /bin/bash dd-agent

#Configure datadog repositories
RUN echo "deb [signed-by=/usr/share/keyrings/datadog-archive-keyring.gpg] https://apt.datad0g.com beta apm" > datadog-beta.list
RUN cp datadog-beta.list /etc/apt/sources.list.d/
RUN echo "deb [signed-by=/usr/share/keyrings/datadog-archive-keyring.gpg] https://apt.datadoghq.com stable 7" > datadog-stable.list
RUN cp datadog-stable.list /etc/apt/sources.list.d/
#Configure repo keys
RUN touch /usr/share/keyrings/datadog-archive-keyring.gpg
RUN chmod a+r /usr/share/keyrings/datadog-archive-keyring.gpg
RUN curl https://keys.datadoghq.com/DATADOG_APT_KEY_CURRENT.public | gpg --no-default-keyring --keyring /usr/share/keyrings/datadog-archive-keyring.gpg --import --batch
RUN curl https://keys.datadoghq.com/DATADOG_APT_KEY_382E94DE.public | gpg --no-default-keyring --keyring /usr/share/keyrings/datadog-archive-keyring.gpg --import --batch
RUN curl https://keys.datadoghq.com/DATADOG_APT_KEY_F14F620E.public | gpg --no-default-keyring --keyring /usr/share/keyrings/datadog-archive-keyring.gpg --import --batch
RUN apt-get update -o Dir::Etc::sourcelist="sources.list.d/datadog-beta.list" -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0" || true
RUN apt-get update -o Dir::Etc::sourcelist="sources.list.d/datadog-stable.list" -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0" || true


#Manual install binaries if exist
COPY --from=binaries /binaries/* /binaries/

#Install autoinjection
#RUN yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject
#RUN yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-library-java

#RUN if ls /binaries/datadog-apm-inject-*.rpm 1> /dev/null 2>&1; then echo "Install datadog-apm-inject from folder" &&  yum -y --disablerepo="*" /binaries/install datadog-apm-inject-*.rpm; else echo "Install datadog-apm-inject from repo" &&  yum -y install --disablerepo="*" --enablerepo="datadog-${LIB_INIT_ENV}" datadog-apm-inject; fi
#RUN if ls /binaries/datadog-apm-library-*.rpm 1> /dev/null 2>&1; then echo "Install datadog-apm-library from folder" &&  yum -y --disablerepo="*" /binaries/install datadog-apm-library-$LIB-*.rpm; else echo "Install datadog-apm-library from repo" &&  yum -y install --disablerepo="*" --enablerepo="datadog-${LIB_INIT_ENV}" datadog-apm-library-$LIB; fi
 RUN apt-get update 
 RUN apt install -y --reinstall -t stable datadog-apm-inject
 RUN apt install -y --reinstall -t stable datadog-apm-library-java

#Output version of the installed packages
RUN export version=$(dpkg -s datadog-apm-inject | grep Version) && export version_lang=$(dpkg -s datadog-apm-library-java| grep Version) 
RUN echo "{'datadog-apm-inject':'1','datadog-apm-library-java':'2'}" > SYSTEM_TESTS_TESTED_COMPONENTS

#Send traces to the test agent
ENV CI_USE_TEST_AGENT="true"
ENV DD_TRACE_AGENT_URL=http://ddapm-test-agent:8126
ENV DD_AGENT_PORT=8126

#Enable debug
ENV DD_TRACE_DEBUG=true
ENV DD_APM_INSTRUMENTATION_DEBUG=true

#It's going to fail because the agent is not running
RUN dd-host-install || true 
