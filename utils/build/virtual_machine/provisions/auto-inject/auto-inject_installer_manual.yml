# Installs the installer package
- os_type: linux
  copy_files:
    - name: copy-tracer-debug-config
      local_path: utils/build/virtual_machine/provisions/auto-inject/tracer_debug/debug_config.yaml
    - name: copy-docker-config
      local_path: utils/build/virtual_machine/provisions/auto-inject/docker/docker_config.yaml

  remote-command: |
    if [ "${DD_env}" == "dev" ]; then
      # To force the installer to pull from dev repositories -- agent config is set manually to datadoghq.com
      export DD_SITE="datad0g.com"
      export DD_INSTALLER_REGISTRY_URL='669783387624.dkr.ecr.us-east-1.amazonaws.com/dockerhub/datadog'
      export DD_INSTALLER_REGISTRY_AUTH='ecr'
    else 
      export DD_SITE="datadoghq.com" 
    fi

    # Environment variables for the installer
    export DD_APM_INSTRUMENTATION_ENABLED=all
    export DD_APM_INSTRUMENTATION_LIBRARIES="${DD_LANG}"
    export DD_INSTALLER_DEFAULT_PKG_INSTALL_DATADOG_AGENT=true

    if [ -n "${DD_INSTALLER_LIBRARY_VERSION}" ]; then
       export "DD_INSTALLER_REGISTRY_AUTH_APM_LIBRARY_$(echo "$DD_LANG" | tr "[:lower:]" "[:upper:]")_PACKAGE"='ecr'
       export "DD_INSTALLER_REGISTRY_URL_APM_LIBRARY_$(echo "$DD_LANG" | tr "[:lower:]" "[:upper:]")_PACKAGE"='669783387624.dkr.ecr.us-east-1.amazonaws.com'
       export "DD_INSTALLER_DEFAULT_PKG_VERSION_DATADOG_APM_LIBRARY_$(echo "$DD_LANG" | tr "[:lower:]" "[:upper:]")"="${DD_INSTALLER_LIBRARY_VERSION}"
    fi

    if [ -n "${DD_INSTALLER_INJECTOR_VERSION}" ]; then
      export DD_INSTALLER_REGISTRY_AUTH_APM_INJECT_PACKAGE='ecr'
      export DD_INSTALLER_REGISTRY_URL_APM_INJECT_PACKAGE='669783387624.dkr.ecr.us-east-1.amazonaws.com'
      export DD_INSTALLER_DEFAULT_PKG_VERSION_DATADOG_APM_INJECT="${DD_INSTALLER_INJECTOR_VERSION}"
    fi

    if [ -n "${DD_INSTALLER_AGENT_VERSION}" ]; then
      export DD_INSTALLER_REGISTRY_AUTH_AGENT_PACKAGE='ecr'
      export DD_INSTALLER_REGISTRY_URL_AGENT_PACKAGE='669783387624.dkr.ecr.us-east-1.amazonaws.com'
      export DD_INSTALLER_DEFAULT_PKG_VERSION_DATADOG_AGENT="${DD_INSTALLER_AGENT_VERSION}"
    fi

    if [ -n "${DD_INSTALLER_INSTALLER_VERSION}" ]; then
      export DD_INSTALLER_REGISTRY_AUTH_INSTALLER_PACKAGE='ecr'
      export DD_INSTALLER_REGISTRY_URL_INSTALLER_PACKAGE='669783387624.dkr.ecr.us-east-1.amazonaws.com'
      export DD_INSTALLER_DEFAULT_PKG_VERSION_DATADOG_INSTALLER="${DD_INSTALLER_INSTALLER_VERSION}"
    fi

    # Env variables set on the scenario definition. Write to file and load
    SCENARIO_AGENT_ENV="${DD_AGENT_ENV:-''}"
    echo "${SCENARIO_AGENT_ENV}" > scenario_agent.env
    echo "AGENT VARIABLES CONFIGURED FROM THE SCENARIO:"
    cat scenario_agent.env
    export $(cat scenario_agent.env | xargs)

    sudo -E sh -c "sudo mkdir -p /etc/datadog-agent && printf \"api_key: ${DD_API_KEY}\nsite: datadoghq.com\n\" > /etc/datadog-agent/datadog.yaml"
    DD_REPO_URL=${DD_injection_repo_url} bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"
    
    sudo cp /tmp/datadog-installer-*.log /var/log/datadog

    sudo mkdir -p /etc/datadog-agent/inject
    sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
    sudo cp debug_config.yaml /etc/datadog-agent/inject/debug_config.yaml
