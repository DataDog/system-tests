lang_variant:
    name: OpenJDK11
    cache: true
    install:
      - os_type: linux
        os_distro: deb
        os_branch: debian
        remote-command: |
          if [ "$(. /etc/os-release && echo "$VERSION_CODENAME")" = "buster" ]; then
            echo 'deb http://archive.debian.org/debian buster main non-free contrib' | sudo tee -a /etc/apt/sources.list
          else
            echo 'deb http://deb.debian.org/debian unstable main non-free contrib' | sudo tee -a /etc/apt/sources.list
          fi
          sudo apt update
          sudo apt -y install openjdk-11-jdk

      - os_type: linux
        os_distro: deb
        remote-command: sudo apt-get -y update && sudo apt-get -y install openjdk-11-jdk-headless

      - os_type: linux
        os_distro: rpm
        remote-command: sudo amazon-linux-extras install java-openjdk11 || sudo dnf -y install java-11-amazon-corretto-devel || sudo yum -y install java-11-openjdk-devel

weblog:
    name: test-app-java-alpine-libgcc
    excluded_os_branches: [amazon_linux2_dotnet6, amazon_linux2]
    #Alma Linux 8 ARM64 is not stable. It fails when we execute 'gradle build' in the Dockerfile
    excluded_os_names: [AlmaLinux_8_arm64]
    install:
      - os_type: linux
        copy_files:

          - name: copy-docker-file
            local_path: utils/build/virtual_machine/weblogs/java/test-app-java-alpine/Dockerfile.alpine.libgcc
            remote_path: Dockerfile.template

          - name: copy-container-run-script
            local_path: utils/build/virtual_machine/weblogs/common/create_and_run_app_container.sh

          - name: copy-docker-compose-file
            local_path: utils/build/virtual_machine/weblogs/java/test-app-java-container/docker-compose.yml

          - name: copy-java-app
            local_path: lib-injection/build/docker/java/jetty-app

          - name: compile-app-script
            local_path: utils/build/virtual_machine/weblogs/java/test-app-java/compile_app.sh

          - name: run-app-script
            local_path: utils/build/virtual_machine/weblogs/java/test-app-java/run_app.sh

        remote-command: |
          sh compile_app.sh 8080
          sh create_and_run_app_container.sh
