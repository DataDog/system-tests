name: Lib injection tags
description: "Generates needed docker tags in order to push dd init image. Tags are related to current branch and CI_COMMIT_SHA variable"

inputs:
  init-image-name:
    description: Init image name
    required: true
  main-branch-name:
    description: Main branch for current repository
    required: true
outputs:
  tag-names:
    description: "Docker tags to be generated"
    value: ${{ steps.docker-tags.outputs.tag-names }}
runs:
  using: composite
  steps:
    - name: Get docker tags to be generated
      id: docker-tags
      shell: bash
      run: |
        DOCKER_IMAGE_NAME=$(echo ghcr.io/${GITHUB_REPOSITORY}/${{ inputs.init-image-name}} | tr '[:upper:]' '[:lower:]')
        DOCKER_IMAGE_NAME_WITH_TAG=$(echo ${DOCKER_IMAGE_NAME}:${{ github.sha }} | tr '[:upper:]' '[:lower:]')
       
        #If we are building main branch, we also tag as latest_snapshot
        if [ "$(echo ${GITHUB_HEAD_REF-${GITHUB_REF#refs/heads/}} | tr / -)" == "${{ inputs.main-branch-name}}" -o "$(echo ${GITHUB_REF#refs/heads/} | tr / -)" == "${{ inputs.main-branch-name}}" ]; then
          DOCKER_IMAGE_NAME_WITH_TAG=${DOCKER_IMAGE_NAME_WITH_TAG},$(echo ${DOCKER_IMAGE_NAME}:latest_snapshot)
        fi

        #If we have the CI_COMMIT_SHA we use it as tag (related with release)
        if [ -n "${{ env.CI_COMMIT_SHA }}" ] ; then
          DOCKER_IMAGE_NAME_WITH_TAG=${DOCKER_IMAGE_NAME_WITH_TAG},$(echo ${DOCKER_IMAGE_NAME}:${{ env.CI_COMMIT_SHA }})
        fi

        echo "Using image name '$DOCKER_IMAGE_NAME_WITH_TAG'"
        echo "tag-names=$DOCKER_IMAGE_NAME_WITH_TAG" >> $GITHUB_OUTPUT

