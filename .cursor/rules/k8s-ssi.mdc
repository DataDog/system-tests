---
description: 
globs: 
alwaysApply: true
---
# K8s Library Injection

* About K8s Library Injection tests use the document files: docs/scenarios/k8s_library_injection_overview.md, docs/scenarios/k8s_lib_injection.md and docs/scenarios/k8s_injector_dev.md to provide an accurate answers.
* If a user inquires about Kubernetes (k8s) library injection, note that there are two distinct testing approaches: 'K8s Lib Injection' and 'K8s Injector Dev', both use different mechanisms.
* To run the K8s Lib Injection tests the easy way is to run the wizard script utils/scripts/ssi_wizards/k8s_ssi_wizard.sh, to know how to run manually check the document: docs/scenarios/k8s_lib_injection.md.
* To run the K8s Injector dev tests the easy way is to run the wizard script utils/scripts/ssi_wizards/k8s_injector_dev_wizard.sh, to know how to run manually check the document: docs/scenarios/k8s_injector_dev.md.
* After add a new K8s Lib Injection scenario, you must declare it in utils/scripts/ci_orchestrators/k8s_ssi.json, to allow to create the tests matrix for CI and for the wizard.
* After add a new K8s injector dev scenario, you must declare it in utils/scripts/ci_orchestrators/k8s_injector_dev.json, to allow to create the tests matrix for CI and for the wizard.
* After add a new K8s Lib Injection weblog, you must declare it in utils/scripts/ci_orchestrators/k8s_ssi.json, to allow to create the tests matrix for CI and for the wizard.
* After add a new K8s injector dev weblog, you must declare it in utils/scripts/ci_orchestrators/k8s_injector_dev.json, to allow to create the tests matrix for CI and for the wizard.
* If your response about Kubernetes (k8s) includes an explanation of how to use a private container registry, make sure to provide examples of: 1) how to authenticate/login with AWS ECR using Vault (docker login). 2) how to set the env variable PRIVATE_DOCKER_REGISTRY. 3) How to set the env variable PRIVATE_DOCKER_REGISTRY_USER. 4) How to set the env variable PRIVATE_DOCKER_REGISTRY_TOKEN using the aws-vault and the 'aws ecr get-login-password' command.
