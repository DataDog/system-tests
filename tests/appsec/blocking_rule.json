{
  "version": "2.1",
  "metadata": {
    "rules_version": "1.2.6"
  },
  "rules": [
    {
      "id": "block-users",
      "name": "Block User Addresses",
      "tags": {
        "type": "block_user",
        "category": "security_response"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "usr.id"
              }
            ],
            "data": "blocked_users"
          },
          "operator": "exact_match"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "blk-001-001",
      "name": "Block IP Addresses",
      "tags": {
        "type": "block_ip",
        "category": "security_response"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "http.client_ip"
              }
            ],
            "data": "blocked_ips"
          },
          "operator": "ip_match"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "arachni_rule",
      "name": "Arachni",
      "tags": {
        "type": "security_scanner",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies",
                "key_path": [
                  "user-agent"
                ]
              }
            ],
            "regex": "^Arachni\\/v"
          },
          "operator": "match_regex"
        }
      ],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "canary_rule1",
      "name": "Canary 1",
      "tags": {
        "type": "security_scanner",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies",
                "key_path": [
                  "user-agent"
                ]
              }
            ],
            "regex": "^Canary\\/v1"
          },
          "operator": "match_regex"
        }
      ],
      "on_match": [
        "block1"
      ]
    },
    {
      "id": "canary_rule2",
      "name": "Canary 2",
      "tags": {
        "type": "security_scanner",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies",
                "key_path": [
                  "user-agent"
                ]
              }
            ],
            "regex": "^Canary\\/v2"
          },
          "operator": "match_regex"
        }
      ],
      "on_match": [
        "block2"
      ]
    },
    {
      "id": "canary_rule3",
      "name": "Canary 3",
      "tags": {
        "type": "security_scanner",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies",
                "key_path": [
                  "user-agent"
                ]
              }
            ],
            "regex": "^Canary\\/v3"
          },
          "operator": "match_regex"
        }
      ],
      "on_match": [
        "block3"
      ]
    },
    {
      "id": "canary_rule4",
      "name": "Canary 4",
      "tags": {
        "type": "security_scanner",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies",
                "key_path": [
                  "user-agent"
                ]
              }
            ],
            "regex": "^Canary\\/v4"
          },
          "operator": "match_regex"
        }
      ],
      "on_match": [
        "block4"
      ]
    },
    {
      "id": "canary_rule5",
      "name": "Canary 5",
      "tags": {
        "type": "security_scanner",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies",
                "key_path": [
                  "user-agent"
                ]
              }
            ],
            "regex": "^Canary\\/v5"
          },
          "operator": "match_regex"
        }
      ],
      "on_match": [
        "block5"
      ]
    },
    {
      "id": "tst-037-009",
      "name": "Test block on response header",
      "tags": {
        "type": "lfi",
        "crs_id": "000008",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.response.headers.no_cookies",
                "key_path": [
                  "content-language"
                ]
              }
            ],
            "regex": "fo-fo|krypton"
          },
          "operator": "match_regex",
          "options": {
            "case_sensitive": true
          }
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-006",
      "name": "Test block on response code",
      "tags": {
        "type": "lfi",
        "crs_id": "000006",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.method"
              }
            ],
            "regex": "OPTIONS"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-001",
      "name": "Test block on query",
      "tags": {
        "type": "lfi",
        "crs_id": "000001",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.query"
              }
            ],
            "regex": "xtrace"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-002",
      "name": "Test block on uri",
      "tags": {
        "type": "lfi",
        "crs_id": "000002",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.uri.raw"
              }
            ],
            "regex": "\\.git"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-003",
      "name": "Test block on request headers",
      "tags": {
        "type": "lfi",
        "crs_id": "000003",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies"
              }
            ],
            "regex": "asldhkuqwgervf"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-004",
      "name": "Test block on body",
      "tags": {
        "type": "lfi",
        "crs_id": "000003",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.body"
              }
            ],
            "regex": "bsldhkuqwgervf"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-007",
      "name": "Test block on path params",
      "tags": {
        "type": "lfi",
        "crs_id": "000007",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.path_params"
              }
            ],
            "regex": "AiKfOeRcvG45"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-008",
      "name": "Test block on cookies",
      "tags": {
        "type": "lfi",
        "crs_id": "000008",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.cookies"
              }
            ],
            "regex": "jdfoSDGFkivRG_234"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-005",
      "name": "Test block on response code",
      "tags": {
        "type": "lfi",
        "crs_id": "000005",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.response.status"
              }
            ],
            "regex": "415|416|417|418"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-010",
      "name": "Test block on not found",
      "tags": {
        "type": "lfi",
        "crs_id": "000005",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.response.status"
              }
            ],
            "regex": "404"
          },
          "operator": "match_regex"
        },
        {
          "operator": "phrase_match",
          "parameters": {
            "inputs": [
              {
                "address": "server.request.uri.raw"
              }
            ],
            "list": [
              "/finger_print"
            ]
          }
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-011",
      "name": "Test block on uri that should not block",
      "tags": {
        "type": "lfi",
        "crs_id": "000011",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.uri.raw"
              }
            ],
            "regex": "^/waf/uri_raw_should_not_include_scheme_domain_and_port$"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-012",
      "name": "Test block on multiple request addresses",
      "tags": {
        "type": "lfi",
        "crs_id": "000012",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.method"
              }
            ],
            "regex": "GET"
          },
          "operator": "match_regex"
        },
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.uri.raw"
              }
            ],
            "regex": "malicious-uri-ypMrmzrWATkLrPKLblvpRGGltBSgHWrK"
          },
          "operator": "match_regex"
        },
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.path_params"
              }
            ],
            "regex": "malicious-path-cGDgSRJvklxGOKMTNfQMViBPpKAvpFoc"
          },
          "operator": "match_regex"
        },
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.query"
              }
            ],
            "regex": "malicious-query-SAGihOkuSwXXFDXNqAWJzNuZEdKNunrJ"
          },
          "operator": "match_regex"
        },
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies"
              }
            ],
            "regex": "malicious-header-kCgvxrYeiwUSYkAuniuGktdvzXYEPSff"
          },
          "operator": "match_regex"
        },
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.cookies"
              }
            ],
            "regex": "malicious-cookie-PwXuEQEdeAjzWpCDqAzPqiUAdXJMHwtS"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "tst-037-013",
      "name": "Test block on multiple request addresses (without path_params)",
      "tags": {
        "type": "lfi",
        "crs_id": "000013",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.method"
              }
            ],
            "regex": "GET"
          },
          "operator": "match_regex"
        },
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.uri.raw"
              }
            ],
            "regex": "malicious-uri-wX1GdUiWdVdoklf0pYBi5kQApO9i77tN"
          },
          "operator": "match_regex"
        },
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.query"
              }
            ],
            "regex": "malicious-query-T3d1nKdkTWIG03q03ix9c9UlhbGigvwQ"
          },
          "operator": "match_regex"
        },
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies"
              }
            ],
            "regex": "malicious-header-siDzyETAdkvKahD3PxlvIqcE0fMIVywE"
          },
          "operator": "match_regex"
        },
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.cookies"
              }
            ],
            "regex": "malicious-cookie-qU4sV2r6ac2nfETV7aJP9Fdt1NaWC9wB"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "monitor-resolvers",
      "name": "Monitor Resolvers",
      "tags": {
        "type": "monitor_single_resolver",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "graphql.server.resolver"
              }
            ],
            "data": "monitor_resolvers"
          },
          "operator": "exact_match"
        }
      ],
      "transformers": [],
      "on_match": []
    },
    {
      "id": "monitor-all-resolvers",
      "name": "Monitor All Resolvers",
      "tags": {
        "type": "monitor_all_resolvers",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "graphql.server.all_resolvers"
              }
            ],
            "data": "monitor_resolvers"
          },
          "operator": "exact_match"
        }
      ],
      "transformers": [],
      "on_match": []
    },
    {
      "id": "block-resolvers",
      "name": "Block Resolvers",
      "tags": {
        "type": "block_resolver",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "graphql.server.all_resolvers"
              },
              {
                "address": "graphql.server.resolver"
              }
            ],
            "data": "blocked_resolvers"
          },
          "operator": "exact_match"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "fp-001-001",
      "name": "Block Endpoint Fingerprint",
      "tags": {
        "type": "block_fp",
        "category": "security_response",
        "module": "custom-acl"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "_dd.appsec.fp.http.endpoint"
              }
            ],
            "regex": "http-get-c9040f9d-a9d49319-[^-]*"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "fp-002-001",
      "name": "Block Network Fingerprint",
      "tags": {
        "type": "block_fp",
        "category": "security_response",
        "module": "custom-acl"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "_dd.appsec.fp.http.network"
              }
            ],
            "regex": "net-[0-2]-1000100000"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "fp-003-001",
      "name": "Block Header Fingerprint",
      "tags": {
        "type": "block_fp",
        "category": "security_response",
        "module": "custom-acl"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "_dd.appsec.fp.http.header"
              }
            ],
            "regex": "hdr-0110000100-[^-]*-[^-]*-[^-]*"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    },
    {
      "id": "fp-004-001",
      "name": "Block Session Fingerprint",
      "tags": {
        "type": "block_fp",
        "category": "security_response",
        "module": "custom-acl"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "_dd.appsec.fp.session"
              }
            ],
            "regex": "ssn-[^-]*-3cb51e60-[^-]*-[^-]*"
          },
          "operator": "match_regex"
        }
      ],
      "transformers": [],
      "on_match": [
        "block"
      ]
    }

  ],
  "actions": [
    {
      "id": "block1",
      "type": "block_request",
      "parameters": {
        "status_code": 401,
        "type": "auto"
      }
    },
    {
      "id": "block2",
      "type": "redirect_request",
      "parameters": {
        "status_code": 301,
        "location": "/you-have-been-blocked"
      }
    },
    {
      "id": "block3",
      "type": "redirect_request",
      "parameters": {
        "status_code": 200,
        "location": "/you-have-been-blocked"
      }
    },
    {
      "id": "block4",
      "type": "redirect_request",
      "parameters": {
        "status_code": 303,
        "location": ""
      }
    },
    {
      "id": "block5",
      "type": "redirect_request",
      "parameters": {
        "status_code": 301,
        "location": "/you-have-been-blocked?security_response_id=[security_response_id]"
      }
    }
  ],
  "rules_data": [
    {
      "id": "blocked_ips",
      "type": "ip_with_expiration",
      "data": [
        {
          "value": "1.1.1.1",
          "expiration": 0
        },
        {
          "value": "9f7b:5e67:5472:4464:90b0:6b0a:9aa6:f9dc",
          "expiration": 0
        }
      ]
    },
    {
      "id": "blocked_users",
      "type": "data_with_expiration",
      "data": [
        {
          "value": "blockedUser",
          "expiration": 0
        }
      ]
    },
    {
      "id": "monitor_resolvers",
      "type": "data_with_expiration",
      "data": [
        {
          "value": "testattack",
          "expiration": 0
        }
      ]
    },
    {
      "id": "blocked_resolvers",
      "type": "data_with_expiration",
      "data": [
        {
          "value": "testblockresolver",
          "expiration": 0
        }
      ]
    }
  ],
  "rules_compat": [
    {
      "id": "ttr-000-001",
      "name": "Trace Tagging Rule: Attributes, No Keep, No Event",
      "tags": {
        "type": "security_scanner",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies",
                "key_path": [
                  "user-agent"
                ]
              }
            ],
            "regex": "^TraceTagging\\/v1"
          },
          "operator": "match_regex"
        }
      ],
      "output": {
          "event": false,
          "keep": false,
          "attributes": {
              "_dd.appsec.trace.integer": {
                  "value": 662607015
              },
              "_dd.appsec.trace.agent": {
                "address": "server.request.headers.no_cookies",
                "key_path": ["user-agent"]
              }
          }
      },
      "on_match": []
    },
    {
      "id": "ttr-000-002",
      "name": "Trace Tagging Rule: Attributes, Keep, No Event",
      "tags": {
        "type": "security_scanner",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies",
                "key_path": [
                  "user-agent"
                ]
              }
            ],
            "regex": "^TraceTagging\\/v2"
          },
          "operator": "match_regex"
        }
      ],
      "output": {
          "event": false,
          "keep": true,
          "attributes": {
              "_dd.appsec.trace.integer": {
                  "value": 602214076
              },
              "_dd.appsec.trace.agent": {
                "address": "server.request.headers.no_cookies",
                "key_path": ["user-agent"]
              }
          }
      },
      "on_match": []
    },
    {
      "id": "ttr-000-003",
      "name": "Trace Tagging Rule: Attributes, Keep, Event",
      "tags": {
        "type": "security_scanner",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies",
                "key_path": [
                  "user-agent"
                ]
              }
            ],
            "regex": "^TraceTagging\\/v3"
          },
          "operator": "match_regex"
        }
      ],
      "output": {
          "event": true,
          "keep": true,
          "attributes": {
              "_dd.appsec.trace.integer": {
                  "value": 299792458
              },
              "_dd.appsec.trace.agent": {
                "address": "server.request.headers.no_cookies",
                "key_path": ["user-agent"]
              }
          }
      },
      "on_match": []
    },
    {
      "id": "ttr-000-004",
      "name": "Trace Tagging Rule: Attributes, No Keep, Event",
      "tags": {
        "type": "security_scanner",
        "category": "attack_attempt"
      },
      "conditions": [
        {
          "parameters": {
            "inputs": [
              {
                "address": "server.request.headers.no_cookies",
                "key_path": [
                  "user-agent"
                ]
              }
            ],
            "regex": "^TraceTagging\\/v4"
          },
          "operator": "match_regex"
        }
      ],
      "output": {
          "event": true,
          "keep": false,
          "attributes": {
              "_dd.appsec.trace.integer": {
                  "value": 1729
              },
              "_dd.appsec.trace.agent": {
                "address": "server.request.headers.no_cookies",
                "key_path": ["user-agent"]
              }
          }
      },
      "on_match": []
    }
  ],
  "processors": [
    {
      "id": "http-endpoint-fingerprint",
      "generator": "http_endpoint_fingerprint",
      "conditions": [],
      "parameters": {
        "mappings": [
          {
            "method": [
              {
                "address": "server.request.method"
              }
            ],
            "uri_raw": [
              {
                "address": "server.request.uri.raw"
              }
            ],
            "body": [
              {
                "address": "server.request.body"
              }
            ],
            "query": [
              {
                "address": "server.request.query"
              }
            ],
            "output": "_dd.appsec.fp.http.endpoint"
          }
        ]
      },
      "evaluate": true,
      "output": true
    },
    {
      "id": "http-header-fingerprint",
      "generator": "http_header_fingerprint",
      "conditions": [],
      "parameters": {
        "mappings": [
          {
            "headers": [
              {
                "address": "server.request.headers.no_cookies"
              }
            ],
            "output": "_dd.appsec.fp.http.header"
          }
        ]
      },
      "evaluate": true,
      "output": true
    },
    {
      "id": "http-network-fingerprint",
      "generator": "http_network_fingerprint",
      "conditions": [],
      "parameters": {
        "mappings": [
          {
            "headers": [
              {
                "address": "server.request.headers.no_cookies"
              }
            ],
            "output": "_dd.appsec.fp.http.network"
          }
        ]
      },
      "evaluate": true,
      "output": true
    },
    {
      "id": "session-fingerprint",
      "generator": "session_fingerprint",
      "conditions": [],
      "parameters": {
        "mappings": [
          {
            "cookies": [
              {
                "address": "server.request.cookies"
              }
            ],
            "session_id": [
              {
                "address": "usr.session_id"
              }
            ],
            "user_id": [
              {
                "address": "usr.id"
              }
            ],
            "output": "_dd.appsec.fp.session"
          }
        ]
      },
      "evaluate": true,
      "output": true
    }
  ]
}
