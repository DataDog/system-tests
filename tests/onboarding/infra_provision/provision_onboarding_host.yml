ami:
- name: ubuntu-x86-22.04
 # ami_id: ami-0557a15b87f6559cf
  ami_id: ami-007855ac798b5175e
  user: ubuntu
  os_type: linux
  os_distro: deb

- name: ubuntu-x86-18.04
  ami_id: ami-0263e4deb427da90e
  user: ubuntu
  os_type: linux
  os_distro: deb

- name: amazon-linux-x86
  ami_id: ami-0dfcb1ef8550277af
  user: ec2-user
  os_type: linux
  os_distro: rpm

- name: amazon-linux-dotnet
  ami_id: ami-005b11f8b84489615
  user: ec2-user
  os_type: linux
  os_distro: rpm
  os_branch: amazon-netcore6

init-config:
  install: !include tests/onboarding/infra_provision/includes/provision_init_config.yml

prepare-repos:
  install: !include tests/onboarding/infra_provision/includes/provision_prepare_repos.yml

agent:
  - env: prod
    install:
      - os_type: linux
        command: bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"
        #dev agent: command: REPO_URL=datad0g.com DD_AGENT_DIST_CHANNEL=beta bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"

agent_auto_install:
  - nodejs: 
    - env: dev
      install:
      - os_type: linux
        copy_files:
            - name: copy-auto-install-script
              local_path: tests/onboarding/autoinjection/repositories/autoinstall/execute_install_script_dev.sh
        command: bash execute_install_script_dev.sh js --inject-mode host 
    - env: prod
      install:
      - os_type: linux
        command:  DD_AGENT_DIST_CHANNEL=stable DD_AGENT_MAJOR_VERSION=7 DD_APM_INSTRUMENTATION_LANGUAGES=js DD_APM_INSTRUMENTATION_ENABLED=host bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"
  - java: 
    - env: dev
      install:
      - os_type: linux
        copy_files:
            - name: copy-auto-install-script
              local_path: tests/onboarding/autoinjection/repositories/autoinstall/execute_install_script_dev.sh
        command: bash execute_install_script_dev.sh java --inject-mode host 

    - env: prod
      install:
      - os_type: linux
        command:  DD_AGENT_DIST_CHANNEL=stable DD_AGENT_MAJOR_VERSION=7 DD_APM_INSTRUMENTATION_LANGUAGES=java DD_APM_INSTRUMENTATION_ENABLED=host bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"

  - python: 
    - env: dev
      install:
      - os_type: linux
        copy_files:
            - name: copy-auto-install-script
              local_path: tests/onboarding/autoinjection/repositories/autoinstall/execute_install_script_dev.sh
        command: bash execute_install_script_dev.sh python --inject-mode host 
    - env: prod
      install:
      - os_type: linux
        command:  DD_AGENT_DIST_CHANNEL=stable DD_AGENT_MAJOR_VERSION=7 DD_APM_INSTRUMENTATION_LANGUAGES=python DD_APM_INSTRUMENTATION_ENABLED=host bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"


  - dotnet: 
    - env: dev
      install:
      - os_type: linux
        copy_files:
            - name: copy-auto-install-script
              local_path: tests/onboarding/autoinjection/repositories/autoinstall/execute_install_script_dev.sh
        command: bash execute_install_script_dev.sh dotnet --inject-mode host 
    - env: prod
      install:
      - os_type: linux
        command:  DD_AGENT_DIST_CHANNEL=stable DD_AGENT_MAJOR_VERSION=7 DD_APM_INSTRUMENTATION_LANGUAGES=dotnet DD_APM_INSTRUMENTATION_ENABLED=host bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"

autoinjection:
#Copy tests/onboarding/autoinjection/host_config.yaml to /etc/datadog-agent/inject/host_config.yaml to enable debug (Disabled for timing reasons)
  - java: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb  
          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-java
            dd-host-install

        - os_type: linux
          os_distro: rpm
          command: |          
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject datadog-apm-library-java
            dd-host-install
            echo "Verify package signature. Fails if it isn't V4"
            yumdownloader datadog-apm-inject
            rpm -v --checksig *.rpm | grep -q "Header V4 RSA/SHA256 Signature"
            echo "Package signature verified!"
      uninstall: 
        - os_type: linux 
          command: dd-host-install --uninstall
    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-java
            dd-host-install

        - os_type: linux
          os_distro: rpm
          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject datadog-apm-library-java
            dd-host-install
            #Verify package signature. Fails if it isn't V4
            yumdownloader datadog-apm-inject
            rpm -v --checksig *.rpm | grep -q "Header V4 RSA/SHA256 Signature"
      uninstall: 
        - os_type: linux 
          command: dd-host-install --uninstall

  - nodejs: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb
          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-js
            dd-host-install

        - os_type: linux
          os_distro: rpm
          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject datadog-apm-library-js
            dd-host-install
      uninstall: 
        - os_type: linux 
          command: dd-host-install --uninstall

    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-js
            dd-host-install 

        - os_type: linux
          os_distro: rpm
          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject datadog-apm-library-js
            dd-host-install
      uninstall: 
        - os_type: linux 
          command: dd-host-install --uninstall
  - dotnet: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: rpm
          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject  datadog-apm-library-dotnet
            dd-host-install
      uninstall: 
        - os_type: linux 
          command: dd-host-install --uninstall
    - env: prod
      install: 
        - os_type: linux
          os_distro: rpm
          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject  datadog-apm-library-dotnet
            dd-host-install
      uninstall: 
        - os_type: linux 
          command: dd-host-install --uninstall
  - python:
    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-python
            dd-host-install

        - os_type: linux
          os_distro: rpm
          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject datadog-apm-library-python
            dd-host-install
      uninstall: 
        - os_type: linux 
          command: dd-host-install --uninstall
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb
          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-python
            dd-host-install

        - os_type: linux
          os_distro: rpm
          command: |         
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject datadog-apm-library-python
            dd-host-install
      uninstall: 
        - os_type: linux 
          command: dd-host-install --uninstall
language-variants:
  - java: 
    - name: OpenJDK11
      version: 11
      install: 
        - os_type: linux
          os_distro: deb
          command: sudo apt-get -y install openjdk-11-jdk-headless 

        - os_type: linux
          os_distro: rpm
          command: sudo amazon-linux-extras install java-openjdk11
 
  - nodejs:
    - name: node16
      version: 16
      install: 
        - os_type: linux
          os_distro: deb
          command: curl -sL https://deb.nodesource.com/setup_16.x | sudo bash - && sudo apt-get install -y nodejs
        - os_type: linux
          os_distro: rpm
          command: curl -sL https://rpm.nodesource.com/setup_16.x | sudo bash - && sudo yum install -y nodejs       

  - dotnet:
    - name: dotnet
      version: 6
      install: 
        - os_type: linux
          os_distro: rpm
          os_branch: amazon-netcore6
          command: dotnet --info  

  - python: 
    - name: Python_3.8.15
      version: 3.8.15
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-auto-install-script
              local_path: tests/onboarding/autoinjection/lang/python_install.sh 
          command: sudo sh python_install.sh deb 3.8.15

        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-auto-install-script
              local_path: tests/onboarding/autoinjection/lang/python_install.sh
          command: sudo sh python_install.sh rpm 3.8.15


weblogs:
  - java: 
    - name: test-app-java
      supported-language-versions:
        - 11
      install: 
        - os_type: linux
          copy_files:
            - name: copy-service
              local_path: tests/onboarding/weblog/java/test-app-java/test-app-java.service

            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/java/test-app-java/test-app-java_run.sh

            - name: copy-java-app
              local_path: lib-injection/build/docker/java/dd-lib-java-init-test-app 
              
          command: sh test-app-java_run.sh
      uninstall: 
        - os_type: linux
          command: sudo systemctl stop test-app-java.service
    - name: wildfly
      supported-language-versions:
        - 11
      install: 
        - os_type: linux
          copy_files:
            - name: copy-service
              local_path: tests/onboarding/weblog/java/wildfly/wildfly.service

            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/java/wildfly/wildfly_run.sh

          command: sh wildfly_run.sh
      uninstall: 
        - os_type: linux
          command: sudo systemctl stop wildfly.service
  - nodejs: 
    - name: test-app-nodejs
      supported-language-versions:
        - 16
      install: 
        - os_type: linux
          copy_files:
            - name: copy-service
              local_path: tests/onboarding/weblog/nodejs/test-app-nodejs/test-app-nodejs.service

            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/nodejs/test-app-nodejs/test-app-nodejs_run.sh

            - name: copy-binary
              local_path: lib-injection/build/docker/nodejs/sample-app/index.js

          command: sh test-app-nodejs_run.sh
      uninstall: 
        - os_type: linux
          command: sudo systemctl stop test-app-nodejs.service

  - dotnet: 
    - name: test-app-dotnet
      supported-language-versions:
        - 6   
      install: 
        - os_type: linux
          os_distro: rpm
          os_branch: amazon-netcore6
          copy_files:
            - name: copy-dotnet-app
              local_path: lib-injection/build/docker/dotnet/dd-lib-dotnet-init-test-app 

            - name: copy-service
              local_path: tests/onboarding/weblog/dotnet/test-app-dotnet/test-app-dotnet.service

            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/dotnet/test-app-dotnet/test-app-dotnet_run.sh
          command: sh test-app-dotnet_run.sh
      uninstall: 
        - os_type: linux
          os_distro: rpm
          os_branch: amazon-netcore6
          command: sudo systemctl stop test-app-dotnet.service

  - python: 
    - name: test-app-python
      supported-language-versions:
        - 3.8.15
      install: 
        - os_type: linux
          copy_files:
            - name: copy-service
              local_path: tests/onboarding/weblog/python/test-app-python-django/test-app-python.service

            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/python/test-app-python-django/test-app-python_run.sh

            - name: copy-python-app
              local_path: lib-injection/build/docker/python/dd-lib-python-init-test-django

          command: export PATH="/home/datadog/.pyenv/bin:$PATH" && eval "$(pyenv init -)" && sudo sh test-app-python_run.sh
      uninstall: 
        - os_type: linux
          command: sudo systemctl stop test-app-python.service

installation_checks: !include tests/onboarding/infra_provision/includes/provision_installation_checks.yml
