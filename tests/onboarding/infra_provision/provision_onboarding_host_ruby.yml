ami: !include tests/onboarding/infra_provision/includes/provision_ami.yml

init-config:
  install: !include tests/onboarding/infra_provision/includes/provision_init_config.yml

prepare-repos:
  install: !include tests/onboarding/infra_provision/includes/provision_prepare_repos.yml

agent: !include tests/onboarding/infra_provision/includes/provision_agent.yml

agent_auto_install:
  - env: prod
    install:
    - os_type: linux
      command:  DD_AGENT_DIST_CHANNEL=stable DD_AGENT_MAJOR_VERSION=7 DD_APM_INSTRUMENTATION_LANGUAGES=ruby DD_APM_INSTRUMENTATION_ENABLED=host bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"

autoinjection:
#Copy tests/onboarding/autoinjection/host_config.yaml to /etc/datadog-agent/inject/host_config.yaml to enable debug (Disabled for timing reasons)
  - env: prod
    install: 
      - os_type: linux
        os_distro: deb
        command: |
          sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-ruby
          dd-host-install

      - os_type: linux
        os_distro: rpm
        command: |
          sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject  datadog-apm-library-ruby
          dd-host-install
    uninstall: 
      - os_type: linux 
        command: dd-host-install --uninstall

language-variants:
  - name: Ruby_3_2
    version: 3.2
    install: 
      - os_type: linux
        os_distro: deb
        command: echo "LANG VARIANTS DONE"
  - name: Ruby_3_23
    version: 3.3
    install: 
      - os_type: linux
        os_distro: deb
        command: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get -y install git-core zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev nodejs yarn
          git clone https://github.com/rbenv/rbenv.git ~/.rbenv 
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc 
          echo 'eval "$(rbenv init -)"' >> ~/.bashrc 
          exec $SHELL  
          git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build 
          echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc 
          exec $SHELL
          #ANTERIOR
          export DEBIAN_FRONTEND=noninteractive
          sudo apt install -y git curl libssl-dev libreadline-dev zlib1g-dev autoconf bison build-essential libyaml-dev libreadline-dev libncurses5-dev libffi-dev libgdbm-dev
          curl -fsSL https://github.com/rbenv/rbenv-installer/raw/HEAD/bin/rbenv-installer | bash
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
          echo 'eval "$(rbenv init -)"' >> ~/.bashrc
          source ~/.bashrc
          rbenv install 3.2.0
          rbenv global 3.2.0
          #ruby -v

          #App dependencies
          echo "===> Installing dependencies" && sudo apt-get -y update && sudo apt-get install -y --force-yes --no-install-recommends curl wget tar gzip gnupg apt-transport-https ca-certificates tzdata locales
          echo "===> Installing database libraries" && sudo apt-get install -y --force-yes --no-install-recommends sqlite3 
          echo "===> Installing dev tools" && mkdir -p /usr/share/man/man1 && sudo apt-get install -y --force-yes --no-install-recommends sudo git openssh-client rsync vim net-tools netcat parallel unzip zip bzip2
          echo "===> Cleaning up" && sudo rm -rf /var/lib/apt/lists/*;

          # Set timezone to UTC by default
          sudo ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime
          
          # Set language
          sudo locale-gen en_US.UTF-8

      - os_type: linux
        os_distro: rpm
        command: sudo amazon-linux-extras install java-openjdk11

weblogs:
  - name: test-app-ruby
    supported-language-versions:
      - 3.2   
    install: 
      - os_type: linux
        copy_files:
          - name: copy-ruby-app
            local_path: lib-injection/build/docker/ruby/lib_injection_rails_app  
          - name: copy-service
            local_path: tests/onboarding/weblog/ruby/test-app-ruby/test-app-ruby.service

          - name: copy-run-weblog-script-ruby
            local_path: tests/onboarding/weblog/ruby/test-app-ruby/test-app-ruby_run.sh
        command: sh test-app-ruby_run.sh
    uninstall: 
      - os_type: linux
        command: sudo systemctl stop test-app-ruby.service

installation_checks: !include tests/onboarding/infra_provision/includes/provision_installation_checks.yml