ami:
- name: ubuntu-x86-22.04
  ami_id: ami-0557a15b87f6559cf
  user: ubuntu
  os_type: linux
  os_distro: deb

- name: ubuntu-x86-18.04
  ami_id: ami-0263e4deb427da90e
  user: ubuntu
  os_type: linux
  os_distro: deb

- name: amazon-linux-x86
  ami_id: ami-0dfcb1ef8550277af
  user: ec2-user
  os_type: linux
  os_distro: rpm

prepare-repos:
  install: !include tests/onboarding/infra_provision/includes/provision_prepare_repos.yml

prepare-docker:
  install: !include tests/onboarding/infra_provision/includes/provision_prepare_docker.yml

agent:

  - env: prod
    install:
      - os_type: linux
        copy_files:
            - name: copy-agent-docker-compose
              local_path: tests/onboarding/autoinjection/docker/docker-compose-agent-prod.yml

        command: cat docker-compose-agent-prod.yml

autoinjection: 
  - java: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-java
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml

        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |    
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject-0.5~pipeline.15611679.beta.d1fdbb53-1.x86_64 datadog-apm-library-java
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml

    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-java
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml

        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject datadog-apm-library-java
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
  - nodejs: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-js
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml

        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject-0.5~pipeline.15611679.beta.d1fdbb53-1.x86_64 datadog-apm-library-js
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml

    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-js
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject datadog-apm-library-js
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
  - python: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-python
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject-0.5~pipeline.15611679.beta.d1fdbb53-1.x86_64  datadog-apm-library-python
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-python
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject  datadog-apm-library-python
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
  - dotnet: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-dotnet
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject-0.5~pipeline.15611679.beta.d1fdbb53-1.x86_64  datadog-apm-library-dotnet
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml

    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-dotnet
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject  datadog-apm-library-dotnet
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
language-variants:
  - java: 
    - name: OpenJDK11
      version: 11
      install: 
        - os_type: linux
          os_distro: deb
          command: sudo apt-get -y install openjdk-11-jdk-headless

        - os_type: linux
          os_distro: rpm
          command: sudo amazon-linux-extras install java-openjdk11


weblogs:
  - java: 
    - name: test-app-java
      supported-language-versions:
        - 11
      install: 
        - os_type: linux
          local-command: tar cvf test-app-java.tar -C lib-injection/build/docker/java/dd-lib-java-init-test-app .
          copy_files:
            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/java/test-app-java/test-app-java_docker_compose_run.sh

            - name: copy-docker-file
              local_path: tests/onboarding/weblog/java/test-app-java/Dockerfile

            - name: copy-docker-compose-file
              local_path: tests/onboarding/weblog/java/test-app-java/docker-compose.yml

            - name: copy-java-app
              local_path: test-app-java.tar

          command: sh test-app-java_docker_compose_run.sh
  - nodejs: 
    - name: test-app-nodejs
      install: 
        - os_type: linux
          local-command: tar cvf test-app-nodejs.tar -C lib-injection/build/docker/nodejs/sample-app .
          copy_files:
            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/nodejs/test-app-nodejs/test-app-nodejs_docker_compose_run.sh

            - name: copy-docker-compose-file
              local_path: tests/onboarding/weblog/nodejs/test-app-nodejs/docker-compose.yml

            - name: copy-nodejs-app
              local_path: test-app-nodejs.tar

          command: sh test-app-nodejs_docker_compose_run.sh
  - python: 
    - name: test-app-python
      install: 
        - os_type: linux
          local-command: tar cvf test-app-python.tar -C lib-injection/build/docker/python/dd-lib-python-init-test-django .
          copy_files:
            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/python/test-app-python-django/test-app-python_docker_compose_run.sh
            - name: copy-docker-compose-file
              local_path: tests/onboarding/weblog/python/test-app-python-django/docker-compose.yml
            - name: copy-python-app
              local_path: test-app-python.tar

          command: sh test-app-python_docker_compose_run.sh
  - dotnet: 
    - name: test-app-dotnet
      install: 
        - os_type: linux
          local-command: tar cvf test-app-dotnet.tar -C lib-injection/build/docker/dotnet/dd-lib-dotnet-init-test-app .
          copy_files:
            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/dotnet/test-app-dotnet/test-app-dotnet_docker_compose_run.sh

            - name: copy-docker-compose-file
              local_path: tests/onboarding/weblog/dotnet/test-app-dotnet/docker-compose.yml

            - name: copy-dotnet-app
              local_path: test-app-dotnet.tar

          command: sh test-app-dotnet_docker_compose_run.sh

installation_checks: !include tests/onboarding/infra_provision/includes/provision_installation_checks.yml