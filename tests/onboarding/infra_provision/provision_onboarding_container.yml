ami:
- name: ubuntu-x86-22.04
  ami_id: ami-0557a15b87f6559cf
  user: ubuntu
  os_type: linux_
  os_distro: deb

- name: ubuntu-x86-18.04
  ami_id: ami-0263e4deb427da90e
  user: ubuntu
  os_type: linux__
  os_distro: deb

- name: amazon-linux-2023-x86
  ami_id: ami-06b09bfacae1453cb
  user: ec2-user
  os_type: linux
  os_distro: rpm

init-config:
  install: !include tests/onboarding/infra_provision/includes/provision_init_config.yml
  
prepare-repos:
  install: !include tests/onboarding/infra_provision/includes/provision_prepare_repos.yml

prepare-docker:
  install: !include tests/onboarding/infra_provision/includes/provision_prepare_docker.yml

agent:

  - env: prod
    install:
      - os_type: linux
        copy_files:
            - name: copy-agent-docker-compose
              local_path: tests/onboarding/autoinjection/docker/docker-compose-agent-prod.yml

        command: cat docker-compose-agent-prod.yml

agent_auto_install:
  - nodejs: 
    - env: dev
      install:
      - os_type: linux
        copy_files:
            - name: copy-auto-install-script
              local_path: tests/onboarding/autoinjection/repositories/autoinstall/execute_install_script_dev.sh
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml
            - name: copy-agent-docker-compose
              local_path: tests/onboarding/autoinjection/docker/docker-compose-agent-prod.yml
        command: |
          bash execute_install_script_dev.sh js --inject-mode docker --install-agent false
          sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
    - env: prod
      install:
      - os_type: linux
        copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml
            - name: copy-agent-docker-compose
              local_path: tests/onboarding/autoinjection/docker/docker-compose-agent-prod.yml
        command: |
          DD_AGENT_DIST_CHANNEL=stable DD_AGENT_MAJOR_VERSION=7 DD_APM_INSTRUMENTATION_LANGUAGES=js DD_APM_INSTRUMENTATION_ENABLED=docker bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"
          sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
   
  - java: 
    - env: dev
      install:
      - os_type: linux
        copy_files:
            - name: copy-auto-install-script
              local_path: tests/onboarding/autoinjection/repositories/autoinstall/execute_install_script_dev.sh
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml
            - name: copy-agent-docker-compose
              local_path: tests/onboarding/autoinjection/docker/docker-compose-agent-prod.yml
        command: |
          bash execute_install_script_dev.sh java --inject-mode docker --install-agent false
          sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
    - env: prod
      install:
      - os_type: linux
        copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml
            - name: copy-agent-docker-compose
              local_path: tests/onboarding/autoinjection/docker/docker-compose-agent-prod.yml
        command: |
          DD_AGENT_DIST_CHANNEL=stable DD_AGENT_MAJOR_VERSION=7 DD_APM_INSTRUMENTATION_LANGUAGES=java DD_APM_INSTRUMENTATION_ENABLED=docker bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"
          sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
  - python: 
    - env: dev
      install:
      - os_type: linux
        copy_files:
            - name: copy-auto-install-script
              local_path: tests/onboarding/autoinjection/repositories/autoinstall/execute_install_script_dev.sh
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml
            - name: copy-agent-docker-compose
              local_path: tests/onboarding/autoinjection/docker/docker-compose-agent-prod.yml
        command: | 
          bash execute_install_script_dev.sh python --inject-mode docker --install-agent false
          sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
    - env: prod
      install:
      - os_type: linux
        copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml
            - name: copy-agent-docker-compose
              local_path: tests/onboarding/autoinjection/docker/docker-compose-agent-prod.yml
        command: |
          DD_AGENT_DIST_CHANNEL=stable DD_AGENT_MAJOR_VERSION=7 DD_APM_INSTRUMENTATION_LANGUAGES=python DD_APM_INSTRUMENTATION_ENABLED=docker bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"
          sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
  - dotnet: 
    - env: dev
      install:
      - os_type: linux
        copy_files:
            - name: copy-auto-install-script
              local_path: tests/onboarding/autoinjection/repositories/autoinstall/execute_install_script_dev.sh
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml
            - name: copy-agent-docker-compose
              local_path: tests/onboarding/autoinjection/docker/docker-compose-agent-prod.yml
        command: |
          bash execute_install_script_dev.sh dotnet --inject-mode docker --install-agent false
          sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
    - env: prod
      install:
      - os_type: linux
        copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml
            - name: copy-agent-docker-compose
              local_path: tests/onboarding/autoinjection/docker/docker-compose-agent-prod.yml
        command: |
          DD_AGENT_DIST_CHANNEL=stable DD_AGENT_MAJOR_VERSION=7 DD_APM_INSTRUMENTATION_LANGUAGES=dotnet DD_APM_INSTRUMENTATION_ENABLED=docker bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"
          sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
autoinjection: 
  - java: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-java
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml

        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |    
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject datadog-apm-library-java
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
      uninstall: 
        - os_type: linux 
          command: dd-container-install --uninstall

    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-java
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml

        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject datadog-apm-library-java
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
      uninstall: 
        - os_type: linux 
          command: dd-container-install --uninstall
  - nodejs: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-js
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml

        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject datadog-apm-library-js
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
      uninstall: 
        - os_type: linux 
          command: dd-container-install --uninstall

    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-js
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject datadog-apm-library-js
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
      uninstall: 
        - os_type: linux 
          command: |
            dd-container-install --uninstall && sudo systemctl start docker.socket
  - python: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-python
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject datadog-apm-library-python
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
      uninstall: 
        - os_type: linux 
          command: dd-container-install --uninstall
    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-python
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject  datadog-apm-library-python
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
      uninstall: 
        - os_type: linux 
          command: dd-container-install --uninstall
  - dotnet: 
    - env: dev
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t beta datadog-apm-inject datadog-apm-library-dotnet
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-staging" datadog-apm-inject datadog-apm-library-dotnet
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
      uninstall: 
        - os_type: linux 
          command: dd-container-install --uninstall
    - env: prod
      install: 
        - os_type: linux
          os_distro: deb
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo apt install -y -t stable datadog-apm-inject datadog-apm-library-dotnet
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
        
        - os_type: linux
          os_distro: rpm
          copy_files:
            - name: copy-docker-config
              local_path: tests/onboarding/autoinjection/docker/docker_config.yaml

          command: |
            sudo yum -y install --disablerepo="*" --enablerepo="datadog-stable" datadog-apm-inject  datadog-apm-library-dotnet
            dd-container-install
            sudo cp docker_config.yaml /etc/datadog-agent/inject/docker_config.yaml
      uninstall: 
        - os_type: linux 
          command: dd-container-install --uninstall

language-variants:
  - java: 
    - name: OpenJDK11
      version: 11
      install: 
        - os_type: linux
          os_distro: deb
          command: sudo apt-get -y install openjdk-11-jdk-headless

        - os_type: linux
          os_distro: rpm
          command: sudo dnf -y install java-11-amazon-corretto-devel


weblogs:
  - java: 
    - name: test-app-java
      supported-language-versions:
        - 11
      install: 
        - os_type: linux
          local-command: tar cvf test-app-java.tar -C lib-injection/build/docker/java/dd-lib-java-init-test-app .
          copy_files:
            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/java/test-app-java/test-app-java_docker_compose_run.sh

            - name: copy-docker-file
              local_path: tests/onboarding/weblog/java/test-app-java/Dockerfile

            - name: copy-docker-compose-file
              local_path: tests/onboarding/weblog/java/test-app-java/docker-compose.yml

            - name: copy-java-app
              local_path: test-app-java.tar

          command: sh test-app-java_docker_compose_run.sh
      uninstall: 
        - os_type: linux
          command: echo "RMM DESINSTALANDO LA APLICACION QUE NO INSTALO"

    - name: test-app-java-alpine
      supported-language-versions:
        - 11
      install: 
        - os_type: linux
          local-command: tar cvf test-app-java.tar -C lib-injection/build/docker/java/dd-lib-java-init-test-app .
          copy_files:
            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/java/test-app-java/test-app-java_docker_compose_run.sh

            - name: copy-docker-file
              local_path: tests/onboarding/weblog/java/test-app-java/Dockerfile.alpine
              remote_path: Dockerfile

            - name: copy-entrypoint-docker
              local_path: tests/onboarding/weblog/java/test-app-java/docker_entrypoint_docker.sh

            - name: copy-docker-compose-file
              local_path: tests/onboarding/weblog/java/test-app-java/docker-compose.yml

            - name: copy-java-app
              local_path: test-app-java.tar

          command: sh test-app-java_docker_compose_run.sh
      uninstall: 
        - os_type: linux
          command: sudo systemctl restart docker.service

    - name: test-app-java-buildpack
      supported-language-versions:
        - 11
      install: 
        - os_type: linux
          local-command: tar cvf test-app-java.tar -C lib-injection/build/docker/java/dd-lib-java-init-test-app .
          copy_files:
            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/java/test-app-java/test-app-java_docker_compose_run_buildpack.sh
            - name: copy-docker-compose-file
              local_path: tests/onboarding/weblog/java/test-app-java/docker-compose.yml
            - name: copy-java-app
              local_path: test-app-java.tar

          command: sh test-app-java_docker_compose_run_buildpack.sh
      uninstall: 
        - os_type: linux
          command: sudo systemctl restart docker.service
  - nodejs: 
    - name: test-app-nodejs
      install: 
        - os_type: linux
          local-command: tar cvf test-app-nodejs.tar -C lib-injection/build/docker/nodejs/sample-app .
          copy_files:
            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/nodejs/test-app-nodejs/test-app-nodejs_docker_compose_run.sh

            - name: copy-docker-compose-file
              local_path: tests/onboarding/weblog/nodejs/test-app-nodejs/docker-compose.yml

           # - name: copy-nodejs-app
           #   local_path: test-app-nodejs.tar

            - name: copy-nodejs-app-1
              local_path: lib-injection/build/docker/nodejs/sample-app/build.sh

            - name: copy-nodejs-app-2
              local_path: lib-injection/build/docker/nodejs/sample-app/Dockerfile

            - name: copy-nodejs-app-3
              local_path: lib-injection/build/docker/nodejs/sample-app/index.js

          command: sh test-app-nodejs_docker_compose_run.sh
      uninstall: 
        - os_type: linux
          command: sudo systemctl stop docker.socket
  - python: 
    - name: test-app-python
      install: 
        - os_type: linux
          local-command: tar cvf test-app-python.tar -C lib-injection/build/docker/python/dd-lib-python-init-test-django .
          copy_files:
            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/python/test-app-python-django/test-app-python_docker_compose_run.sh
            - name: copy-docker-compose-file
              local_path: tests/onboarding/weblog/python/test-app-python-django/docker-compose.yml
            - name: copy-python-app
              local_path: test-app-python.tar

          command: sh test-app-python_docker_compose_run.sh
      uninstall: 
        - os_type: linux
          command: sudo systemctl stop docker.service
  - dotnet: 
    - name: test-app-dotnet
      install: 
        - os_type: linux
          local-command: tar cvf test-app-dotnet.tar -C lib-injection/build/docker/dotnet/dd-lib-dotnet-init-test-app .
          copy_files:
            - name: copy-run-weblog-script
              local_path: tests/onboarding/weblog/dotnet/test-app-dotnet/test-app-dotnet_docker_compose_run.sh

            - name: copy-docker-compose-file
              local_path: tests/onboarding/weblog/dotnet/test-app-dotnet/docker-compose.yml

            - name: copy-dotnet-app
              local_path: test-app-dotnet.tar

          command: sh test-app-dotnet_docker_compose_run.sh
      uninstall: 
        - os_type: linux
          command: sudo systemctl restart docker.service

installation_checks: !include tests/onboarding/infra_provision/includes/provision_installation_checks.yml