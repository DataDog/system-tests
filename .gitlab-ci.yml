include:
  - remote: https://gitlab-templates.ddbuild.io/libdatadog/include/single-step-instrumentation-tests.yml

stages:
  - nodejs_tracer
  - before_tests

.base_job_onboarding_system_tests:
  extends: .base_job_onboarding
  after_script:
    - SCENARIO_SUFIX=$(echo "$SCENARIO" | tr '[:upper:]' '[:lower:]')
    - REPORTS_PATH="reports/"
    - mkdir -p "$REPORTS_PATH"
    - cp -R logs_"${SCENARIO_SUFIX}" $REPORTS_PATH/
    - cp logs_"${SCENARIO_SUFIX}"/feature_parity.json "$REPORTS_PATH"/"${SCENARIO_SUFIX}".json
    - mv "$REPORTS_PATH"/logs_"${SCENARIO_SUFIX}" "$REPORTS_PATH"/logs_"${TEST_LIBRARY}"_"${ONBOARDING_FILTER_WEBLOG}"_"${SCENARIO_SUFIX}" 
  artifacts:
      when: always
      paths:
        - reports/
 
variables:
    # Do not modify this - must be the repository name for Kubernetes gitlab runners to run
    KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: system-tests #helm-charts
    TEST: 1
    
onboarding_nodejs:
  extends: .base_job_onboarding_system_tests
  stage: nodejs_tracer
  allow_failure: true
  dependencies: []
  only:
    - schedules
  variables:
    TEST_LIBRARY: "nodejs"
  parallel:
      matrix:
        - ONBOARDING_FILTER_ENV: [prod]
          ONBOARDING_FILTER_WEBLOG: [test-app-nodejs-container]
          SCENARIO: [CONTAINER_AUTO_INJECTION]
         
  script:
      - echo "RMM--> $DOCKER_LOGIN"
      - echo "RMM--> $DOCKER_LOGIN_PASS"
      - ./build.sh -i runner
      - timeout 2700s ./run.sh $SCENARIO --vm-weblog ${ONBOARDING_FILTER_WEBLOG} --vm-env ${ONBOARDING_FILTER_ENV} --vm-library ${TEST_LIBRARY} --vm-provider aws


check_merge_labels:
  #Build docker images if it's needed. Check if the PR has the labels associated with the image build.
  image: registry.ddbuild.io/images/ci_docker_base
  tags: ["runner:docker"]

  stage: before_tests
  allow_failure: true
  before_script:
    - export GH_TOKEN=$(aws ssm get-parameter --region us-east-1 --name ci.system-tests.gh-token --with-decryption --query "Parameter.Value" --out text) 
    - export DOCKER_LOGIN=$(aws ssm get-parameter --region us-east-1 --name ci.system-tests.docker-login-write --with-decryption --query "Parameter.Value" --out text) 
    - export DOCKER_LOGIN_PASS=$(aws ssm get-parameter --region us-east-1 --name ci.system-tests.docker-login-pass-write --with-decryption --query "Parameter.Value" --out text) 
  script:
    - ./utils/scripts/get_pr_merged_labels.sh
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"
