image: tiangolo/docker-with-compose

.base_job:
  # image: $CI_IMAGE
  needs: []
  before_script:
    - apk add bash jq git unzip curl
    - pip install pyyaml awscli
    - aws --version && docker --version && docker-compose --version
    - export DD_API_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.system-tests.dd_api_key --with-decryption --query "Parameter.Value" --out text)
    - export GL_TOKEN=$(aws ssm get-parameter --region us-east-1 --name ci.system-tests.gl_token --with-decryption --query "Parameter.Value" --out text)
    - export CIRCLECI_TOKEN=$(aws ssm get-parameter --region us-east-1 --name ci.system-tests.circleci_token --with-decryption --query "Parameter.Value" --out text)

onboarding_scenarios:
  stage: test
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/test-infra-definitions/runner:a58cc31c
  tags: ["arch:amd64"]
  only:
    - schedules
  before_script:
    # Setup AWS Credentials
    - mkdir -p ~/.aws
    - set +x
    - echo "STEP 0.1"
    - aws --version && docker --version && docker-compose --version
    - echo "STEP 0.2"
    - aws ssm get-parameter --region us-east-1 --name ci.system-tests.agent-qa-profile --with-decryption --query "Parameter.Value" --out text >> ~/.aws/config
    - echo "STEP 1"
    - set -x
    - export AWS_PROFILE=agent-qa-ci
    - echo "STEP 2"
    - pulumi login .
  parallel:
    matrix:
      - TEST_LIBRARY: nodejs
  script:
    - build.sh -i runner
    - run.sh ONBOARDING_HOST
  artifacts:
    when: always
    paths:
      - logs/
      - logs_onboarding_host/