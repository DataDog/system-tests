include:
  - remote: https://gitlab-templates.ddbuild.io/libdatadog/include/single-step-instrumentation-tests.yml

stages:
  - AWS_SSI

ssi_tests:
  image: registry.ddbuild.io/images/ci_docker_base
  tags: ["arch:amd64"]
  stage: AWS_SSI
  script:
    - echo "NO AWS TESTS TO RUN"

.base_job_onboarding_system_tests:
    extends: .base_job_onboarding
    needs: []
    script:
        - ./build.sh -i runner
        - ./run.sh $SCENARIO --vm-weblog ${WEBLOG} --vm-env prod --vm-library ${TEST_LIBRARY} --vm-provider aws --vm-default-vms All --vm-only ${VM}
    after_script: |
        SCENARIO_SUFIX=$(echo "$SCENARIO" | tr "[:upper:]" "[:lower:]")
        REPORTS_PATH="reports/"
        mkdir -p "$REPORTS_PATH"
        cp -R logs_"${SCENARIO_SUFIX}" $REPORTS_PATH/"
        cp logs_"${SCENARIO_SUFIX}"/feature_parity.json "$REPORTS_PATH"/"${SCENARIO_SUFIX}".json
        mv "$REPORTS_PATH"/logs_"${SCENARIO_SUFIX}" "$REPORTS_PATH"/logs_"${TEST_LIBRARY}"_"${ONBOARDING_FILTER_WEBLOG}"_"${SCENARIO_SUFIX}_${DEFAULT_VMS}"
        if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        export FP_IMPORT_URL=$(aws ssm get-parameter --region us-east-1 --name ci.system-tests.fp-import-url --with-decryption --query "Parameter.Value" --out text)
        export FP_API_KEY=$(aws ssm get-parameter --region us-east-1 --name ci.system-tests.fp-api-key --with-decryption --query "Parameter.Value" --out text)
        for folder in reports/logs*/ ; do
          echo "Checking folder: ${folder}"
          for filename in ./${folder}*_feature_parity.json; do
            if [ -e ${filename} ]
            then
              echo "Processing report: ${filename}"
              curl -X POST ${FP_IMPORT_URL} --fail --header "Content-Type: application/json" --header "FP_API_KEY: ${FP_API_KEY}" --data "@${filename}" --include
            fi
          done
        done
        fi
    artifacts:
        when: always
        paths:
            - reports/

