name: Lib injection test runner
description: "Lib injection tests runner"

inputs:
  version:
    description: Version dev or prod
    required: true
  library:
    description: Library language java,python...
    required: true
  scenarios:
    description: scenarios will be run
    required: true
  DD_API_KEY:
    description: DD API key
    required: true
runs:
  using: composite

  steps:

      - name: Build
        run: SYSTEM_TEST_BUILD_ATTEMPTS=3 ./build.sh
        shell: bash

      - name: Run DEFAULT scenario
        run: ./run.sh DEFAULT
        shell: bash
        env:
          DD_API_KEY: ${{ inputs.DD_API_KEY }}
        if: contains(fromJson(inputs.scenarios), 'DEFAULT')

      - name: Run PROFILING scenario
        run: ./run.sh PROFILING
        shell: bash
        env:
          DD_API_KEY: ${{ inputs.DD_API_KEY }}
        if: contains(fromJson(inputs.scenarios), 'PROFILING')

      - name: Run CGROUP scenario
        run: ./run.sh CGROUP
        shell: bash
        env:
          DD_API_KEY: ${{ inputs.DD_API_KEY }}
        if: contains(fromJson(inputs.scenarios), 'CGROUP')

      - name: Run TRACE_PROPAGATION_STYLE_W3C scenario
        run: ./run.sh TRACE_PROPAGATION_STYLE_W3C
        shell: bash
        env:
          DD_API_KEY: ${{ inputs.DD_API_KEY }}
        if: ${{ inputs.library != 'python' && contains(fromJson(inputs.scenarios), 'TRACE_PROPAGATION_STYLE_W3C') }}

      - name: Run INTEGRATIONS scenario
        run: ./run.sh INTEGRATIONS
        env:
          DD_API_KEY: ${{ inputs.DD_API_KEY }}
        shell: bash
        if: contains(fromJson(inputs.scenarios), 'INTEGRATIONS')
        
      - name: Run LIBRARY_CONF_CUSTOM_HEADERS_SHORT scenario
        run: ./run.sh LIBRARY_CONF_CUSTOM_HEADERS_SHORT
        env:
          DD_API_KEY: ${{ inputs.DD_API_KEY }}
        shell: bash
        if: contains(fromJson(inputs.scenarios), 'LIBRARY_CONF_CUSTOM_HEADERS_SHORT')

      - name: Run LIBRARY_CONF_CUSTOM_HEADERS_LONG scenario
        run: ./run.sh LIBRARY_CONF_CUSTOM_HEADERS_LONG
        env:
          DD_API_KEY: ${{ inputs.DD_API_KEY }}
        shell: bash
        if: contains(fromJson(inputs.scenarios), 'LIBRARY_CONF_CUSTOM_HEADERS_LONG')

