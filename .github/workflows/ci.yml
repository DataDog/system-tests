name: Testing the test
'on':
  workflow_dispatch: {}
  schedule:
  - cron: 00 02 * * 2-6
  pull_request:
    branches:
    - '**'
  push:
    branches:
    - main
env:
  REGISTRY: ghcr.io
jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - run: pip install -r requirements.txt
    - run: black --check --diff .
    - if: ${{ failure() }}
      run: 'echo "Lint fails, please have a look on https://github.com/DataDog/system-tests/blob/main/docs/edit/lint.md"

        exit 1

        '
    - run: mkdir -p logs/docker/weblog/logs/
    - run: PYTHONPATH="$PWD" pytest utils/test_the_test

  matrix-generator:
    runs-on: ubuntu-latest
    outputs:
      variant: ${{ steps.set-matrix.outputs.variant }}
    steps:
    - id: set-matrix
      uses: DataDog/system-tests/.github/actions/matrix@robertomonteromiguel/simplify_ci_workflow
      with:
        java: true
        python: true

  check-matrix:
    runs-on: ubuntu-latest
    needs: matrix-generator
    steps:
      - name: Install json2yaml
        run: |
          sudo npm install -g json2yaml

      - name: Check matrix definition
        run: |
          matrix='${{ needs.matrix-generator.outputs.variant }}'
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml

  test-the-tests-9:
    runs-on: ubuntu-latest
    needs:
    - lint_and_test
    - matrix-generator
    strategy:
      max-parallel: 2
      matrix: ${{fromJson(needs.matrix-generator.outputs.variant)}}
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.variant.library }}
      WEBLOG_VARIANT: ${{ matrix.variant.weblog }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - uses: ./.github/actions/prepare-agent
      with:
          version: ${{ matrix.version }}
          library: ${{ matrix.variant.library }} 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: ./.github/actions/runner
      with:
          version: ${{ matrix.version }}
          library: ${{ matrix.variant.library }} 
          scenarios: ("uno", "CGROUP") 
          DD_API_KEY: ${{ secrets.DD_API_KEY }}




  test-the-tests-0:
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-latest
    needs:
    - lint_and_test
    strategy:
      matrix:
        variant:
        - library: cpp
          weblog: nginx
        - library: dotnet
          weblog: poc
        - library: dotnet
          weblog: uds
        - library: golang
          weblog: chi
        - library: golang
          weblog: echo
        - library: golang
          weblog: gin
        - library: golang
          weblog: gorilla
        - library: golang
          weblog: net-http
        - library: golang
          weblog: uds-echo
        - library: java
          weblog: jersey-grizzly2
        - library: java
          weblog: ratpack
        - library: java
          weblog: resteasy-netty3
        - library: java
          weblog: vertx3
        - library: java
          weblog: spring-boot-jetty
        - library: java
          weblog: spring-boot
        - library: java
          weblog: uds-spring-boot
        - library: java
          weblog: spring-boot-openliberty
        - library: java
          weblog: spring-boot-undertow
        - library: nodejs
          weblog: express4
        - library: nodejs
          weblog: uds-express4
        - library: nodejs
          weblog: express4-typescript
        - library: php
          weblog: apache-mod-7.0
        - library: php
          weblog: apache-mod-7.1
        - library: php
          weblog: apache-mod-7.2
        - library: php
          weblog: apache-mod-7.3
        - library: php
          weblog: apache-mod-7.4
        - library: php
          weblog: apache-mod-8.0
        - library: php
          weblog: apache-mod-8.1
        - library: php
          weblog: apache-mod-7.0-zts
        - library: php
          weblog: apache-mod-7.1-zts
        - library: php
          weblog: apache-mod-7.2-zts
        - library: php
          weblog: apache-mod-7.3-zts
        - library: php
          weblog: apache-mod-7.4-zts
        - library: php
          weblog: apache-mod-8.0-zts
        - library: php
          weblog: apache-mod-8.1-zts
        - library: php
          weblog: php-fpm-7.0
        - library: php
          weblog: php-fpm-7.1
        - library: php
          weblog: php-fpm-7.2
        - library: php
          weblog: php-fpm-7.3
        - library: php
          weblog: php-fpm-7.4
        - library: php
          weblog: php-fpm-8.0
        - library: php
          weblog: php-fpm-8.1
        - library: python
          weblog: flask-poc
        - library: python
          weblog: django-poc
        - library: python
          weblog: uwsgi-poc
        - library: python
          weblog: uds-flask
        - library: ruby
          weblog: rack
        - library: ruby
          weblog: sinatra14
        - library: ruby
          weblog: sinatra20
        - library: ruby
          weblog: sinatra21
        - library: ruby
          weblog: uds-sinatra
        - library: ruby
          weblog: rails32
        - library: ruby
          weblog: rails40
        - library: ruby
          weblog: rails41
        - library: ruby
          weblog: rails42
        - library: ruby
          weblog: rails50
        - library: ruby
          weblog: rails51
        - library: ruby
          weblog: rails52
        - library: ruby
          weblog: rails60
        - library: ruby
          weblog: rails61
        - library: ruby
          weblog: rails70
        version:
        - prod
        - dev
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.variant.library }}
      WEBLOG_VARIANT: ${{ matrix.variant.weblog }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - run: mkdir logs && touch logs/.weblog.env
    - name: Pull images
      run: docker-compose pull library_proxy cassandra_db mongodb postgres
    - name: Load WAF rules
      if: ${{ matrix.version == 'dev' }}
      run: ./utils/scripts/load-binary.sh waf_rule_set
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Load library binary
      if: ${{ matrix.version == 'dev' && (matrix.variant.library != 'php' && matrix.variant.library != 'java')}}
      run: ./utils/scripts/load-binary.sh ${{ matrix.variant.library }}
    - name: Load PHP prod library binary
      if: ${{ matrix.variant.library == 'php' }}
      run: ./utils/scripts/load-binary.sh php prod
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Load library PHP appsec binary
      if: ${{ matrix.variant.library == 'php' }}
      run: ./utils/scripts/load-binary.sh php_appsec ${{matrix.version}}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Load agent binary
      if: ${{ matrix.version == 'dev' }}
      run: ./utils/scripts/load-binary.sh agent
    - name: Log in to the Container registry
      if: ${{ matrix.variant.library == 'ruby' }}
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
    - name: Build
      run: SYSTEM_TEST_BUILD_ATTEMPTS=3 ./build.sh
    - name: Run DEFAULT scenario
      run: ./run.sh DEFAULT
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run PROFILING scenario
      run: ./run.sh PROFILING
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run CGROUP scenario
      run: ./run.sh CGROUP
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run TRACE_PROPAGATION_STYLE_W3C scenario
      run: ./run.sh TRACE_PROPAGATION_STYLE_W3C
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
      if: ${{ matrix.variant.library != 'python' }}
    - name: Run INTEGRATIONS scenario
      run: ./run.sh INTEGRATIONS
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run LIBRARY_CONF_CUSTOM_HEADERS_SHORT scenario
      run: ./run.sh LIBRARY_CONF_CUSTOM_HEADERS_SHORT
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run LIBRARY_CONF_CUSTOM_HEADERS_LONG scenario
      run: ./run.sh LIBRARY_CONF_CUSTOM_HEADERS_LONG
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Compress logs
      if: ${{ always() }}
      run: tar -czvf artifact.tar.gz $(ls | grep logs)
    - name: Upload artifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: logs_${{ matrix.variant.library }}_${{ matrix.variant.weblog }}_${{ matrix.version }}_0
        path: artifact.tar.gz
    - name: Upload results CI Visibility
      if: ${{ always() }}
      run: ./utils/scripts/upload_results_CI_visibility.sh ${{ matrix.version }} system-tests ${{ github.run_id }}-${{ github.run_attempt }}
      env:
        DD_API_KEY: ${{ secrets.DD_CI_API_KEY }}
    - name: Print fancy log report
      if: ${{ always() }}
      run: python utils/scripts/markdown_logs.py >> $GITHUB_STEP_SUMMARY

  test-the-tests-1:
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-latest
    needs:
    - lint_and_test
    strategy:
      matrix:
        variant:
        - library: cpp
          weblog: nginx
        - library: dotnet
          weblog: poc
        - library: dotnet
          weblog: uds
        - library: golang
          weblog: chi
        - library: golang
          weblog: echo
        - library: golang
          weblog: gin
        - library: golang
          weblog: gorilla
        - library: golang
          weblog: net-http
        - library: golang
          weblog: uds-echo
        - library: java
          weblog: jersey-grizzly2
        - library: java
          weblog: ratpack
        - library: java
          weblog: resteasy-netty3
        - library: java
          weblog: vertx3
        - library: java
          weblog: spring-boot-jetty
        - library: java
          weblog: spring-boot
        - library: java
          weblog: uds-spring-boot
        - library: java
          weblog: spring-boot-openliberty
        - library: java
          weblog: spring-boot-undertow
        - library: nodejs
          weblog: express4
        - library: nodejs
          weblog: uds-express4
        - library: nodejs
          weblog: express4-typescript
        - library: php
          weblog: apache-mod-7.0
        - library: php
          weblog: apache-mod-7.1
        - library: php
          weblog: apache-mod-7.2
        - library: php
          weblog: apache-mod-7.3
        - library: php
          weblog: apache-mod-7.4
        - library: php
          weblog: apache-mod-8.0
        - library: php
          weblog: apache-mod-8.1
        - library: php
          weblog: apache-mod-7.0-zts
        - library: php
          weblog: apache-mod-7.1-zts
        - library: php
          weblog: apache-mod-7.2-zts
        - library: php
          weblog: apache-mod-7.3-zts
        - library: php
          weblog: apache-mod-7.4-zts
        - library: php
          weblog: apache-mod-8.0-zts
        - library: php
          weblog: apache-mod-8.1-zts
        - library: php
          weblog: php-fpm-7.0
        - library: php
          weblog: php-fpm-7.1
        - library: php
          weblog: php-fpm-7.2
        - library: php
          weblog: php-fpm-7.3
        - library: php
          weblog: php-fpm-7.4
        - library: php
          weblog: php-fpm-8.0
        - library: php
          weblog: php-fpm-8.1
        - library: python
          weblog: flask-poc
        - library: python
          weblog: django-poc
        - library: python
          weblog: uwsgi-poc
        - library: python
          weblog: uds-flask
        - library: ruby
          weblog: rack
        - library: ruby
          weblog: sinatra14
        - library: ruby
          weblog: sinatra20
        - library: ruby
          weblog: sinatra21
        - library: ruby
          weblog: uds-sinatra
        - library: ruby
          weblog: rails32
        - library: ruby
          weblog: rails40
        - library: ruby
          weblog: rails41
        - library: ruby
          weblog: rails42
        - library: ruby
          weblog: rails50
        - library: ruby
          weblog: rails51
        - library: ruby
          weblog: rails52
        - library: ruby
          weblog: rails60
        - library: ruby
          weblog: rails61
        - library: ruby
          weblog: rails70
        version:
        - prod
        - dev
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.variant.library }}
      WEBLOG_VARIANT: ${{ matrix.variant.weblog }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - run: mkdir logs && touch logs/.weblog.env
    - name: Pull images
      run: docker-compose pull library_proxy cassandra_db mongodb postgres
    - name: Load WAF rules
      if: ${{ matrix.version == 'dev' }}
      run: ./utils/scripts/load-binary.sh waf_rule_set
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Load library binary
      if: ${{ matrix.version == 'dev' && (matrix.variant.library != 'php' && matrix.variant.library != 'java')}}
      run: ./utils/scripts/load-binary.sh ${{ matrix.variant.library }}
    - name: Load PHP prod library binary
      if: ${{ matrix.variant.library == 'php' }}
      run: ./utils/scripts/load-binary.sh php prod
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Load library PHP appsec binary
      if: ${{ matrix.variant.library == 'php' }}
      run: ./utils/scripts/load-binary.sh php_appsec ${{matrix.version}}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Load agent binary
      if: ${{ matrix.version == 'dev' }}
      run: ./utils/scripts/load-binary.sh agent
    - name: Log in to the Container registry
      if: ${{ matrix.variant.library == 'ruby' }}
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
    - name: Build
      run: SYSTEM_TEST_BUILD_ATTEMPTS=3 ./build.sh
    - name: Run REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES scenario
      run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run REMOTE_CONFIG_MOCKED_BACKEND_LIVE_DEBUGGING scenario
      run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_LIVE_DEBUGGING
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD scenario
      run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES_NOCACHE scenario
      run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES_NOCACHE
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run REMOTE_CONFIG_MOCKED_BACKEND_LIVE_DEBUGGING_NOCACHE scenario
      run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_LIVE_DEBUGGING_NOCACHE
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD_NOCACHE scenario
      run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD_NOCACHE
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run SAMPLING scenario
      run: ./run.sh SAMPLING
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Compress logs
      if: ${{ always() }}
      run: tar -czvf artifact.tar.gz $(ls | grep logs)
    - name: Upload artifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: logs_${{ matrix.variant.library }}_${{ matrix.variant.weblog }}_${{ matrix.version }}_1
        path: artifact.tar.gz
    - name: Upload results CI Visibility
      if: ${{ always() }}
      run: ./utils/scripts/upload_results_CI_visibility.sh ${{ matrix.version }} system-tests ${{ github.run_id }}-${{ github.run_attempt }}
      env:
        DD_API_KEY: ${{ secrets.DD_CI_API_KEY }}
    - name: Print fancy log report
      if: ${{ always() }}
      run: python utils/scripts/markdown_logs.py >> $GITHUB_STEP_SUMMARY

  test-the-tests-2:
    if: ${{ false }}  # disable for now  
    runs-on: ubuntu-latest
    needs:
    - lint_and_test
    strategy:
      matrix:
        variant:
        - library: cpp
          weblog: nginx
        - library: dotnet
          weblog: poc
        - library: dotnet
          weblog: uds
        - library: golang
          weblog: chi
        - library: golang
          weblog: echo
        - library: golang
          weblog: gin
        - library: golang
          weblog: gorilla
        - library: golang
          weblog: net-http
        - library: golang
          weblog: uds-echo
        - library: java
          weblog: jersey-grizzly2
        - library: java
          weblog: ratpack
        - library: java
          weblog: resteasy-netty3
        - library: java
          weblog: vertx3
        - library: java
          weblog: spring-boot-jetty
        - library: java
          weblog: spring-boot
        - library: java
          weblog: uds-spring-boot
        - library: java
          weblog: spring-boot-openliberty
        - library: java
          weblog: spring-boot-wildfly
        - library: java
          weblog: spring-boot-undertow
        - library: nodejs
          weblog: express4
        - library: nodejs
          weblog: uds-express4
        - library: nodejs
          weblog: express4-typescript
        - library: php
          weblog: apache-mod-7.0
        - library: php
          weblog: apache-mod-7.1
        - library: php
          weblog: apache-mod-7.2
        - library: php
          weblog: apache-mod-7.3
        - library: php
          weblog: apache-mod-7.4
        - library: php
          weblog: apache-mod-8.0
        - library: php
          weblog: apache-mod-8.1
        - library: php
          weblog: apache-mod-7.0-zts
        - library: php
          weblog: apache-mod-7.1-zts
        - library: php
          weblog: apache-mod-7.2-zts
        - library: php
          weblog: apache-mod-7.3-zts
        - library: php
          weblog: apache-mod-7.4-zts
        - library: php
          weblog: apache-mod-8.0-zts
        - library: php
          weblog: apache-mod-8.1-zts
        - library: php
          weblog: php-fpm-7.0
        - library: php
          weblog: php-fpm-7.1
        - library: php
          weblog: php-fpm-7.2
        - library: php
          weblog: php-fpm-7.3
        - library: php
          weblog: php-fpm-7.4
        - library: php
          weblog: php-fpm-8.0
        - library: php
          weblog: php-fpm-8.1
        - library: python
          weblog: flask-poc
        - library: python
          weblog: django-poc
        - library: python
          weblog: uwsgi-poc
        - library: python
          weblog: uds-flask
        - library: ruby
          weblog: rack
        - library: ruby
          weblog: sinatra14
        - library: ruby
          weblog: sinatra20
        - library: ruby
          weblog: sinatra21
        - library: ruby
          weblog: uds-sinatra
        - library: ruby
          weblog: rails32
        - library: ruby
          weblog: rails40
        - library: ruby
          weblog: rails41
        - library: ruby
          weblog: rails42
        - library: ruby
          weblog: rails50
        - library: ruby
          weblog: rails51
        - library: ruby
          weblog: rails52
        - library: ruby
          weblog: rails60
        - library: ruby
          weblog: rails61
        - library: ruby
          weblog: rails70
        version:
        - prod
        - dev
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.variant.library }}
      WEBLOG_VARIANT: ${{ matrix.variant.weblog }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - run: mkdir logs && touch logs/.weblog.env
    - name: Pull images
      run: docker-compose pull library_proxy cassandra_db mongodb postgres
    - name: Load WAF rules
      if: ${{ matrix.version == 'dev' }}
      run: ./utils/scripts/load-binary.sh waf_rule_set
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Load library binary
      if: ${{ matrix.version == 'dev' && (matrix.variant.library != 'php' && matrix.variant.library != 'java')}}
      run: ./utils/scripts/load-binary.sh ${{ matrix.variant.library }}
    - name: Load PHP prod library binary
      if: ${{ matrix.variant.library == 'php' }}
      run: ./utils/scripts/load-binary.sh php prod
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Load library PHP appsec binary
      if: ${{ matrix.variant.library == 'php' }}
      run: ./utils/scripts/load-binary.sh php_appsec ${{matrix.version}}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Load agent binary
      if: ${{ matrix.version == 'dev' }}
      run: ./utils/scripts/load-binary.sh agent
    - name: Log in to the Container registry
      if: ${{ matrix.variant.library == 'ruby' }}
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
    - name: Build
      run: SYSTEM_TEST_BUILD_ATTEMPTS=3 ./build.sh
    - name: Run APPSEC_MISSING_RULES scenario
      run: ./run.sh APPSEC_MISSING_RULES
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run APPSEC_CORRUPTED_RULES scenario
      run: ./run.sh APPSEC_CORRUPTED_RULES
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run APPSEC_CUSTOM_RULES scenario
      run: ./run.sh APPSEC_CUSTOM_RULES
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run APPSEC_RULES_MONITORING_WITH_ERRORS scenario
      run: ./run.sh APPSEC_RULES_MONITORING_WITH_ERRORS
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run APPSEC_BLOCKING scenario
      run: ./run.sh APPSEC_BLOCKING
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run APPSEC_DISABLED scenario
      run: ./run.sh APPSEC_DISABLED
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run APPSEC_LOW_WAF_TIMEOUT scenario
      run: ./run.sh APPSEC_LOW_WAF_TIMEOUT
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run APPSEC_CUSTOM_OBFUSCATION scenario
      run: ./run.sh APPSEC_CUSTOM_OBFUSCATION
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run APPSEC_RATE_LIMITER scenario
      run: ./run.sh APPSEC_RATE_LIMITER
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run APPSEC_IP_BLOCKING scenario
      run: ./run.sh APPSEC_IP_BLOCKING
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Run APPSEC_RUNTIME_ACTIVATION scenario
      run: ./run.sh APPSEC_RUNTIME_ACTIVATION
      env:
        DD_API_KEY: ${{ secrets.DD_API_KEY }}
    - name: Compress logs
      if: ${{ always() }}
      run: tar -czvf artifact.tar.gz $(ls | grep logs)
    - name: Upload artifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: logs_${{ matrix.variant.library }}_${{ matrix.variant.weblog }}_${{ matrix.version }}_2
        path: artifact.tar.gz
    - name: Upload results CI Visibility
      if: ${{ always() }}
      run: ./utils/scripts/upload_results_CI_visibility.sh ${{ matrix.version }} system-tests ${{ github.run_id }}-${{ github.run_attempt }}
      env:
        DD_API_KEY: ${{ secrets.DD_CI_API_KEY }}
    - name: Print fancy log report
      if: ${{ always() }}
      run: python utils/scripts/markdown_logs.py >> $GITHUB_STEP_SUMMARY
  post_test-the-tests:
    runs-on: ubuntu-latest
    needs:
    - test-the-tests-0
    - test-the-tests-1
    - test-the-tests-2
    if: always() && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Update CI Dashboard
      run: ./utils/scripts/update_dashboard_CI_visibility.sh system-tests ${{ github.run_id }}-${{ github.run_attempt }}
      env:
        DD_API_KEY: ${{ secrets.DD_CI_API_KEY }}
        DD_APP_KEY: ${{ secrets.DD_CI_APP_KEY }}
  peformances:
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-latest
    needs:
    - lint_and_test
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Run
      run: ./scenarios/perfs/run.sh golang
    - name: Display
      run: python scenarios/perfs/process.py
  fuzzer:
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-latest
    needs:
    - lint_and_test
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build
      run: ./build.sh golang
    - name: Run
      run: ./run.sh scenarios/fuzzer/main.py -t 60
      env:
        RUNNER_CMD: python
  parametric:
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-latest
    needs:
    - lint_and_test
    strategy:
      matrix:
        client:
        - python
        - dotnet
        - golang
        - nodejs
      fail-fast: false
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install
      run: cd parametric && pip install wheel && pip install -r requirements.txt
    - name: Run
      run: cd parametric && CLIENTS_ENABLED=${{ matrix.client }} ./run.sh
