name: Testing the test

on:
  pull_request:
    branches:
      - "**"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - run: pip install -r requirements.txt
    - run: black --check --diff .
  test-the-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - library: cpp
            weblog-variant: nginx
          - library: dotnet
            weblog-variant: poc
          - library: golang
            weblog-variant: net-http
          - library: golang
            weblog-variant: gorilla
          - library: java
            weblog-variant: spring-boot-poc
          - library: nodejs
            weblog-variant: express-poc
          - library: php
            weblog-variant: vanilla-poc
          - library: python
            weblog-variant: flask-poc
          - library: python
            weblog-variant: uwsgi-poc
          - library: ruby
            weblog-variant: sinatra-poc
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.library }}
      WEBLOG_VARIANT: ${{ matrix.weblog-variant }}
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load library binary
        if: ${{ matrix.library != 'cpp' && matrix.library != 'java' && matrix.library != 'php' && matrix.library != 'python' }}
        run: ./utils/scripts/load-binary.sh ${{ matrix.library }}

      - name: Load library binary
        if: ${{ matrix.library == 'python' }}
        run: echo "ddtrace @ git+https://github.com/DataDog/dd-trace-py.git" > binaries/python-load-from-pip

      - name: Build
        run: ./build.sh

      - name: Run default scenario
        run: ./run.sh

      - name: Run missing AppSec rules file
        run: ./run.sh APPSEC_MISSING_RULES

      - name: Compress logs
        if: ${{ always() }}
        run: tar -czvf artifact.tar.gz $(ls | grep logs)

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs_${{ matrix.library }}_${{ matrix.weblog-variant }}
          path: artifact.tar.gz

  test-appsec-unsupported:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        weblog:
          - library: python
            weblog-variant: armv7
          - library: nodejs
            weblog-variant: armv7
          - library: ruby
            weblog-variant: armv7
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.weblog.library }}
      WEBLOG_VARIANT: ${{ matrix.weblog.weblog-variant }}
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        run: ./build.sh -e "--platform linux/arm/v7"

      - name: Run unsupported attacks scenario
        run: ./run.sh APPSEC_UNSUPPORTED

      - name: Compress logs
        if: ${{ always() }}
        run: tar -czvf artifact.tar.gz $(ls | grep logs)

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs_${{ matrix.weblog.library }}_${{ matrix.weblog.weblog-variant }}
          path: artifact.tar.gz
