name: Testing the test

on:
  workflow_dispatch: {}
  schedule:
    - cron:  '00 02 * * 2-6'
  pull_request:
    branches:
      - "**"
env:
  REGISTRY: ghcr.io

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - run: pip install -r requirements.txt
    - run: black --check --diff .
    - if: ${{ failure() }}
      run: |
        echo "Lint fails, please have a look on https://github.com/DataDog/system-tests/blob/main/docs/edit/lint.md"
        exit 1
    - run: mkdir -p logs/docker/weblog/logs/
    - run: PYTHONPATH="$PWD" pytest utils/test_the_test.py

  test-the-tests:
    runs-on: ubuntu-latest
    needs: lint_and_test
    strategy:
      matrix:
        include:
          - library: cpp
            weblog-variant: nginx
            version: prod

          - library: dotnet
            weblog-variant: poc
            version: dev
          - library: dotnet
            weblog-variant: poc
            version: prod

          - library: golang
            weblog-variant: net-http
            version: dev
          - library: golang
            weblog-variant: net-http
            version: prod
          - library: golang
            weblog-variant: gorilla
            version: dev
          - library: golang
            weblog-variant: gorilla
            version: prod
          - library: golang
            weblog-variant: echo
            version: dev
          - library: golang
            weblog-variant: echo
            version: prod
          - library: golang
            weblog-variant: chi
            version: dev
          - library: golang
            weblog-variant: chi
            version: prod
          - library: golang
            weblog-variant: gin
            version: dev
          - library: golang
            weblog-variant: gin
            version: prod

          - library: java
            weblog-variant: spring-boot
            version: prod
          - library: java
            weblog-variant: spring-boot-jetty
            version: prod
          - library: java
            weblog-variant: jersey-grizzly2
            version: prod
          - library: java
            weblog-variant: resteasy-netty3
            version: prod
          - library: java
            weblog-variant: ratpack
            version: prod
          - library: java
            weblog-variant: vertx3
            version: prod

          - library: nodejs
            weblog-variant: express4
            version: dev
          - library: nodejs
            weblog-variant: express4
            version: prod
          - library: nodejs
            weblog-variant: express4-typescript
            version: dev
          - library: nodejs
            weblog-variant: express4-typescript
            version: prod

          - library: php
            weblog-variant: apache-mod
            version: prod
          - library: php
            weblog-variant: php-fpm
            version: prod

          - library: python
            weblog-variant: flask-poc
            version: dev
          - library: python
            weblog-variant: flask-poc
            version: prod
          - library: python
            weblog-variant: uwsgi-poc
            version: dev
          - library: python
            weblog-variant: uwsgi-poc
            version: prod
          - library: python
            weblog-variant: django-poc
            version: dev
          - library: python
            weblog-variant: django-poc
            version: prod

          - library: ruby
            weblog-variant: rack
            version: dev
          - library: ruby
            weblog-variant: rack
            version: prod

          - library: ruby
            weblog-variant: sinatra14
            version: dev
          - library: ruby
            weblog-variant: sinatra14
            version: prod
          - library: ruby
            weblog-variant: sinatra20
            version: dev
          - library: ruby
            weblog-variant: sinatra20
            version: prod
          - library: ruby
            weblog-variant: sinatra21
            version: dev
          - library: ruby
            weblog-variant: sinatra21
            version: prod

          - library: ruby
            weblog-variant: rails32
            version: dev
          - library: ruby
            weblog-variant: rails32
            version: prod
          - library: ruby
            weblog-variant: rails40
            version: dev
          - library: ruby
            weblog-variant: rails40
            version: prod
          - library: ruby
            weblog-variant: rails41
            version: dev
          - library: ruby
            weblog-variant: rails41
            version: prod
          - library: ruby
            weblog-variant: rails42
            version: dev
          - library: ruby
            weblog-variant: rails42
            version: prod
          - library: ruby
            weblog-variant: rails50
            version: dev
          - library: ruby
            weblog-variant: rails50
            version: prod
          - library: ruby
            weblog-variant: rails51
            version: dev
          - library: ruby
            weblog-variant: rails51
            version: prod
          - library: ruby
            weblog-variant: rails52
            version: dev
          - library: ruby
            weblog-variant: rails52
            version: prod
          - library: ruby
            weblog-variant: rails60
            version: dev
          - library: ruby
            weblog-variant: rails60
            version: prod
          - library: ruby
            weblog-variant: rails61
            version: dev
          - library: ruby
            weblog-variant: rails61
            version: prod
          - library: ruby
            weblog-variant: rails70
            version: dev
          - library: ruby
            weblog-variant: rails70
            version: prod
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.library }}
      WEBLOG_VARIANT: ${{ matrix.weblog-variant }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load WAF rules
        if: ${{ matrix.version == 'dev' }}
        run: ./utils/scripts/load-binary.sh waf_rule_set
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Load library binary
        if: ${{ matrix.version == 'dev' && matrix.library != 'python'  }}
        run: ./utils/scripts/load-binary.sh ${{ matrix.library }}

      - name: Load library binary
        if: ${{ matrix.version == 'dev' && matrix.library == 'python' }}
        run: echo "ddtrace @ git+https://github.com/DataDog/dd-trace-py.git" > binaries/python-load-from-pip

      - name: Load library PHP appsec binary
        if: ${{ matrix.version == 'dev' && matrix.library == 'php' }}
        run: ./utils/scripts/load-binary.sh php_appsec
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Container registry
        if: ${{ matrix.library == 'ruby' }}
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Build
        run: ./build.sh

      - name: Run default scenario
        run: ./run.sh
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run missing AppSec rules file
        run: ./run.sh APPSEC_MISSING_RULES
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run custom AppSec rules file
        run: ./run.sh APPSEC_CUSTOM_RULES
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run profiling test
        if: ${{ matrix.library == 'nodejs' }}
        run: ./run.sh PROFILING
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run UDS scenario
        if: ${{ matrix.library != 'php' && matrix.library != 'cpp' }}
        run: ./run.sh UDS
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Compress logs
        if: ${{ always() }}
        run: tar -czvf artifact.tar.gz $(ls | grep logs)

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs_${{ matrix.library }}_${{ matrix.weblog-variant }}_${{ matrix.version }}
          path: artifact.tar.gz

  peformances:
    runs-on: ubuntu-latest
    needs: lint_and_test
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run
        run: ./scenarios/perfs/run.sh golang
      - name: Display
        run: python scenarios/perfs/process.py
