name: Testing the test

on:
  workflow_dispatch: {}
  schedule:
    - cron:  '00 02 * * 2-6'
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - run: pip install -r requirements.txt
    - run: black --check --diff .
    - if: ${{ failure() }}
      run: |
        echo "Lint fails, please have a look on https://github.com/DataDog/system-tests/blob/main/docs/edit/lint.md"
        exit 1
    - run: mkdir -p logs/docker/weblog/logs/
    - run: PYTHONPATH="$PWD" pytest utils/test_the_test

  injection-tests-java:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lib-injection-connection: ['uds', 'network']
        lib-injection-use-admission-controller: ['', 'use-admission-controller']
      fail-fast: false
    env:
      TEST_LIBRARY: java
      LIBRARY_INJECTION_CONNECTION: ${{ matrix.lib-injection-connection }}
      LIBRARY_INJECTION_ADMISSION_CONTROLLER: ${{ matrix.lib-injection-admission-controller }}
      LIBRARY_INJECTION_INIT_IMAGE: ghcr.io/datadog/dd-trace-java/dd-lib-java-init:34db2f76715dbbe9168806bac7c89c7ad4d51996
      LIBRARY_INJECTION_TEST_APP_IMAGE: ghcr.io/datadog/dd-trace-java/dd-lib-java-init-test-app:34db2f76715dbbe9168806bac7c89c7ad4d51996
    steps:
      - name: Checkout system tests
        uses: actions/checkout@v3

      - name: Build
        run: ./lib-injection/build.sh

      - name: Run
        run: ./lib-injection/run.sh

  injection-tests-node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # node does not support UDS
        lib-injection-connection: ['network']
        lib-injection-use-admission-controller: ['', 'use-admission-controller']
      fail-fast: false
    env:
      TEST_LIBRARY: nodejs
      LIBRARY_INJECTION_CONNECTION: ${{ matrix.lib-injection-connection }}
      LIBRARY_INJECTION_ADMISSION_CONTROLLER: ${{ matrix.lib-injection-admission-controller }}
      LIBRARY_INJECTION_INIT_IMAGE: ghcr.io/datadog/dd-trace-js/dd-lib-js-init:e1043d06c7b25f5494a80d3c95e43029ac5cefff
      LIBRARY_INJECTION_TEST_APP_IMAGE: ghcr.io/datadog/dd-trace-js/sample-app:45cb74896b0b528d23b1458c9cacfa9b296658ba
    steps:
      - name: Checkout system tests
        uses: actions/checkout@v3

      - name: Build
        run: ./lib-injection/build.sh

      - name: Run
        run: ./lib-injection/run.sh

  injection-tests-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lib-injection-connection: ['uds', 'network']
        lib-injection-use-admission-controller: ['', 'use-admission-controller']
      fail-fast: false
    env:
      TEST_LIBRARY: python
      LIBRARY_INJECTION_CONNECTION: ${{ matrix.lib-injection-connection }}
      LIBRARY_INJECTION_ADMISSION_CONTROLLER: ${{ matrix.lib-injection-admission-controller }}
      LIBRARY_INJECTION_INIT_IMAGE: ghcr.io/datadog/dd-trace-py/dd-lib-python-init:5f62ab0bbec26cef23f16f3165460e61c2c1eba5
      LIBRARY_INJECTION_TEST_APP_IMAGE: ghcr.io/datadog/dd-trace-py/dd-lib-python-init-test-app:5f62ab0bbec26cef23f16f3165460e61c2c1eba5
    steps:
      - name: Checkout system tests
        uses: actions/checkout@v3

      - name: Build
        run: ./lib-injection/build.sh

      - name: Run
        run: ./lib-injection/run.sh

  test-the-tests:
    runs-on: ubuntu-latest
    needs: lint_and_test
    strategy:
      matrix:
        include:
          - library: cpp
            weblog-variant: nginx
            version: prod

          - library: dotnet
            weblog-variant: poc
            version: dev
          - library: dotnet
            weblog-variant: poc
            version: prod

          - library: golang
            weblog-variant: net-http
            version: dev
          - library: golang
            weblog-variant: net-http
            version: prod
          - library: golang
            weblog-variant: gorilla
            version: dev
          - library: golang
            weblog-variant: gorilla
            version: prod
          - library: golang
            weblog-variant: echo
            version: dev
          - library: golang
            weblog-variant: echo
            version: prod
          - library: golang
            weblog-variant: chi
            version: dev
          - library: golang
            weblog-variant: chi
            version: prod
          - library: golang
            weblog-variant: gin
            version: dev
          - library: golang
            weblog-variant: gin
            version: prod

          - library: java
            weblog-variant: spring-boot
            version: prod
          - library: java
            weblog-variant: spring-boot-jetty
            version: prod
          - library: java
            weblog-variant: spring-boot-openliberty
            version: prod
          - library: java
            weblog-variant: jersey-grizzly2
            version: prod
          - library: java
            weblog-variant: resteasy-netty3
            version: prod
          - library: java
            weblog-variant: ratpack
            version: prod
          - library: java
            weblog-variant: vertx3
            version: prod

          - library: nodejs
            weblog-variant: express4
            version: dev
          - library: nodejs
            weblog-variant: express4
            version: prod
          - library: nodejs
            weblog-variant: express4-typescript
            version: dev
          - library: nodejs
            weblog-variant: express4-typescript
            version: prod

          - library: php
            weblog-variant: apache-mod-8.1
            version: prod
          - library: php
            weblog-variant: apache-mod-8.1
            version: dev
          - library: php
            weblog-variant: apache-mod-8.0
            version: prod
          - library: php
            weblog-variant: apache-mod-8.0
            version: dev
          - library: php
            weblog-variant: apache-mod-7.4
            version: prod
          - library: php
            weblog-variant: apache-mod-7.4
            version: dev
          - library: php
            weblog-variant: apache-mod-7.3
            version: prod
          - library: php
            weblog-variant: apache-mod-7.3
            version: dev
          # - library: php
          #   weblog-variant: apache-mod-7.2
          #   version: prod
          - library: php
            weblog-variant: apache-mod-7.2
            version: dev
          # - library: php
          #   weblog-variant: apache-mod-7.1
          #   version: prod
          - library: php
            weblog-variant: apache-mod-7.1
            version: dev
          # - library: php
          #   weblog-variant: apache-mod-7.0
          #   version: prod
          - library: php
            weblog-variant: apache-mod-7.0
            version: dev
          - library: php
            weblog-variant: apache-mod-8.1-zts
            version: prod
          - library: php
            weblog-variant: apache-mod-8.1-zts
            version: dev
          - library: php
            weblog-variant: apache-mod-8.0-zts
            version: prod
          - library: php
            weblog-variant: apache-mod-8.0-zts
            version: dev
          - library: php
            weblog-variant: apache-mod-7.4-zts
            version: prod
          - library: php
            weblog-variant: apache-mod-7.4-zts
            version: dev
          - library: php
            weblog-variant: apache-mod-7.3-zts
            version: prod
          - library: php
            weblog-variant: apache-mod-7.3-zts
            version: dev
          # - library: php
          #   weblog-variant: apache-mod-7.2-zts
          #   version: prod
          - library: php
            weblog-variant: apache-mod-7.2-zts
            version: dev
          # - library: php
          #   weblog-variant: apache-mod-7.1-zts
          #   version: prod
          - library: php
            weblog-variant: apache-mod-7.1-zts
            version: dev
          # - library: php
          #   weblog-variant: apache-mod-7.0-zts
          #   version: prod
          - library: php
            weblog-variant: apache-mod-7.0-zts
            version: dev
          - library: php
            weblog-variant: php-fpm-8.1
            version: prod
          - library: php
            weblog-variant: php-fpm-8.1
            version: dev
          - library: php
            weblog-variant: php-fpm-8.0
            version: prod
          - library: php
            weblog-variant: php-fpm-8.0
            version: dev
          - library: php
            weblog-variant: php-fpm-7.4
            version: prod
          - library: php
            weblog-variant: php-fpm-7.4
            version: dev
          - library: php
            weblog-variant: php-fpm-7.3
            version: prod
          - library: php
            weblog-variant: php-fpm-7.3
            version: dev
          # - library: php
          #   weblog-variant: php-fpm-7.2
          #   version: prod
          - library: php
            weblog-variant: php-fpm-7.2
            version: dev
          # - library: php
          #   weblog-variant: php-fpm-7.1
          #   version: prod
          - library: php
            weblog-variant: php-fpm-7.1
            version: dev
          # - library: php
          #   weblog-variant: php-fpm-7.0
          #   version: prod
          - library: php
            weblog-variant: php-fpm-7.0
            version: dev
          - library: python
            weblog-variant: flask-poc
            version: dev
          - library: python
            weblog-variant: flask-poc
            version: prod
          - library: python
            weblog-variant: uwsgi-poc
            version: dev
          - library: python
            weblog-variant: uwsgi-poc
            version: prod
          - library: python
            weblog-variant: django-poc
            version: dev
          - library: python
            weblog-variant: django-poc
            version: prod
          # - library: python
          #   weblog-variant: pylons
          #   version: dev
          # - library: python
          #   weblog-variant: pylons
          #   version: prod

          - library: ruby
            weblog-variant: rack
            version: dev
          - library: ruby
            weblog-variant: rack
            version: prod

          - library: ruby
            weblog-variant: sinatra14
            version: dev
          - library: ruby
            weblog-variant: sinatra14
            version: prod
          - library: ruby
            weblog-variant: sinatra20
            version: dev
          - library: ruby
            weblog-variant: sinatra20
            version: prod
          - library: ruby
            weblog-variant: sinatra21
            version: dev
          - library: ruby
            weblog-variant: sinatra21
            version: prod

          - library: ruby
            weblog-variant: rails32
            version: dev
          - library: ruby
            weblog-variant: rails32
            version: prod
          - library: ruby
            weblog-variant: rails40
            version: dev
          - library: ruby
            weblog-variant: rails40
            version: prod
          - library: ruby
            weblog-variant: rails41
            version: dev
          - library: ruby
            weblog-variant: rails41
            version: prod
          - library: ruby
            weblog-variant: rails42
            version: dev
          - library: ruby
            weblog-variant: rails42
            version: prod
          - library: ruby
            weblog-variant: rails50
            version: dev
          - library: ruby
            weblog-variant: rails50
            version: prod
          - library: ruby
            weblog-variant: rails51
            version: dev
          - library: ruby
            weblog-variant: rails51
            version: prod
          - library: ruby
            weblog-variant: rails52
            version: dev
          - library: ruby
            weblog-variant: rails52
            version: prod
          - library: ruby
            weblog-variant: rails60
            version: dev
          - library: ruby
            weblog-variant: rails60
            version: prod
          - library: ruby
            weblog-variant: rails61
            version: dev
          - library: ruby
            weblog-variant: rails61
            version: prod
          - library: ruby
            weblog-variant: rails70
            version: dev
          - library: ruby
            weblog-variant: rails70
            version: prod
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.library }}
      WEBLOG_VARIANT: ${{ matrix.weblog-variant }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load WAF rules
        if: ${{ matrix.version == 'dev' }}
        run: ./utils/scripts/load-binary.sh waf_rule_set
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Load library binary
        if: ${{ matrix.version == 'dev' && matrix.library != 'php' }}
        run: ./utils/scripts/load-binary.sh ${{ matrix.library }}

      - name: Load library PHP appsec binary
        if: ${{ matrix.version == 'dev' && matrix.library == 'php' }}
        run: ./utils/scripts/load-binary.sh php_appsec
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Load agent binary
        if: ${{ matrix.version == 'dev' }}
        run: ./utils/scripts/load-binary.sh agent

      - name: Log in to the Container registry
        if: ${{ matrix.library == 'ruby' }}
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Build
        run: ./build.sh -a 3

      - name: Run default scenario
        run: ./run.sh
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run INTEGRATIONS scenario
        run: ./run.sh INTEGRATIONS
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      # not working as now
      # - name: Run TRACE_PROPAGATION_STYLE_W3C scenario
      #   if: ${{ matrix.version != 'prod' || matrix.library != 'python' }}
      #   run: ./run.sh TRACE_PROPAGATION_STYLE_W3C
      #   env:
      #     DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES scenario
        run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run REMOTE_CONFIG_MOCKED_BACKEND_LIVE_DEBUGGING scenario
        run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_LIVE_DEBUGGING
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD scenario
        run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES_NOCACHE scenario
        run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_ASM_FEATURES_NOCACHE
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run REMOTE_CONFIG_MOCKED_BACKEND_LIVE_DEBUGGING_NOCACHE scenario
        run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_LIVE_DEBUGGING_NOCACHE
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD_NOCACHE scenario
        run: ./run.sh REMOTE_CONFIG_MOCKED_BACKEND_ASM_DD_NOCACHE
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run APPSEC_CUSTOM_RULES scenario
        run: ./run.sh APPSEC_CUSTOM_RULES
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run APPSEC_RULES_MONITORING_WITH_ERRORS scenario
        run: ./run.sh APPSEC_RULES_MONITORING_WITH_ERRORS
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run PROFILING test
        if: ${{ matrix.library == 'nodejs' }}
        run: ./run.sh PROFILING
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run UDS scenario
        if: ${{ matrix.library != 'php' && matrix.library != 'cpp' }}
        run: ./run.sh UDS
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run CGROUP scenario
        run: ./run.sh CGROUP
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run APPSEC_DISABLED scenario
        run: ./run.sh APPSEC_DISABLED
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run APPSEC_LOW_WAF_TIMEOUT scenario
        run: ./run.sh APPSEC_LOW_WAF_TIMEOUT
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run APPSEC_CUSTOM_OBFUSCATION scenario
        run: ./run.sh APPSEC_CUSTOM_OBFUSCATION
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run APPSEC_RATE_LIMITER scenario
        run: ./run.sh APPSEC_RATE_LIMITER
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run missing AppSec rules file
        run: ./run.sh APPSEC_MISSING_RULES
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run LIBRARY_CONF_CUSTOM_HEADERS_SHORT scenario
        run: ./run.sh LIBRARY_CONF_CUSTOM_HEADERS_SHORT
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run LIBRARY_CONF_CUSTOM_HEADERS_LONG scenario
        run: ./run.sh LIBRARY_CONF_CUSTOM_HEADERS_LONG
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Run APPSEC_IP_BLOCKING scenario
        run: ./run.sh APPSEC_IP_BLOCKING
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Compress logs
        if: ${{ always() }}
        run: tar -czvf artifact.tar.gz $(ls | grep logs)

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs_${{ matrix.library }}_${{ matrix.weblog-variant }}_${{ matrix.version }}
          path: artifact.tar.gz

      - name: Upload results CI Visibility
        if: ${{ always() }}
        run: ./utils/scripts/upload_results_CI_visibility.sh ${{ matrix.version }} system-tests ${{ github.run_id }}-${{ github.run_attempt }}
        env:
          DD_API_KEY: ${{ secrets.DD_CI_API_KEY }}
          
      - name: Print fancy log report
        if: ${{ always() }}
        run: python utils/scripts/markdown_logs.py >> $GITHUB_STEP_SUMMARY
  post_test-the-tests:
    runs-on: ubuntu-latest
    needs: [test-the-tests]
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Update CI Dashboard
        run: ./utils/scripts/update_dashboard_CI_visibility.sh system-tests ${{ github.run_id }}-${{ github.run_attempt }}
        env:
          DD_API_KEY: ${{ secrets.DD_CI_API_KEY }}
          DD_APP_KEY: ${{ secrets.DD_CI_APP_KEY }}
  peformances:
    runs-on: ubuntu-latest
    needs: lint_and_test
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run
        run: ./scenarios/perfs/run.sh golang
      - name: Display
        run: python scenarios/perfs/process.py

  fuzzer:
    runs-on: ubuntu-latest
    needs: lint_and_test
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: ./build.sh golang
      - name: Run
        run: ./run.sh scenarios/fuzzer/main.py -t 60
        env:
          RUNNER_CMD: python

  parametric:
    runs-on: ubuntu-latest
    needs: lint_and_test
    strategy:
      matrix:
        client: ['python', 'dotnet', 'golang', 'nodejs']
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          # FIXME: pytest==5.4.3 does not support Python 3.10
          python-version: '3.9'
      - name: Install
        run: |
          pip install wheel
      - name: Run
        run: |
          cd parametric
          pip install -r requirements.txt
          CLIENTS_ENABLED=${{ matrix.client }} ./run.sh
