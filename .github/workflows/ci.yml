name: Testing the test

on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - "**"

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - run: pip install -r requirements.txt
    - run: black --check --diff .
    - run: mkdir -p logs/docker/weblog/logs/
    - run: PYTHONPATH="$PWD" pytest utils/test_the_test.py
  test-the-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - library: cpp
            weblog-variant: nginx
            version: prod

          - library: dotnet
            weblog-variant: poc
            version: dev
          - library: dotnet
            weblog-variant: poc
            version: prod

          - library: golang
            weblog-variant: net-http
            version: dev
          - library: golang
            weblog-variant: net-http
            version: prod
          - library: golang
            weblog-variant: gorilla
            version: dev
          - library: golang
            weblog-variant: gorilla
            version: prod
          - library: golang
            weblog-variant: echo
            version: dev
          - library: golang
            weblog-variant: echo
            version: prod
          - library: golang
            weblog-variant: chi
            version: dev
          - library: golang
            weblog-variant: chi
            version: prod

          - library: java
            weblog-variant: spring-boot-poc
            version: prod

          - library: nodejs
            weblog-variant: express-poc
            version: dev
          - library: nodejs
            weblog-variant: express-poc
            version: prod

          - library: php
            weblog-variant: apache-mod
            version: prod

          # - library: python
          #   weblog-variant: flask-poc
          #   version: dev
          - library: python
            weblog-variant: flask-poc
            version: prod
          # - library: python
          #   weblog-variant: uwsgi-poc
          #   version: dev
          - library: python
            weblog-variant: uwsgi-poc
            version: prod
          - library: python
            weblog-variant: django-poc
            version: prod

          - library: ruby
            weblog-variant: sinatra-poc
            version: dev
          - library: ruby
            weblog-variant: sinatra-poc
            version: prod

          - library: ruby
            weblog-variant: rails
            version: dev
          - library: ruby
            weblog-variant: rails
            version: prod
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.library }}
      WEBLOG_VARIANT: ${{ matrix.weblog-variant }}
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load library binary
        if: ${{ matrix.version == 'dev' }}
        run: ./utils/scripts/load-binary.sh ${{ matrix.library }}

      # uncomment this block once DataDog/dd-appsec-php-internal is public
      # - name: Load library PHP appsec binary
      #   if: ${{ matrix.version == 'dev' && matrix.library == 'php' }}
      #   run: ./utils/scripts/load-binary.sh php_appsec

      - name: Load library binary
        if: ${{ matrix.version == 'dev' && matrix.library == 'python' }}
        run: echo "ddtrace @ git+https://github.com/DataDog/dd-trace-py.git" > binaries/python-load-from-pip

      - name: Build
        run: ./build.sh

      - name: Run default scenario
        run: ./run.sh

      - name: Run missing AppSec rules file
        run: ./run.sh APPSEC_MISSING_RULES

      - name: Compress logs
        if: ${{ always() }}
        run: tar -czvf artifact.tar.gz $(ls | grep logs)

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs_${{ matrix.library }}_${{ matrix.weblog-variant }}_${{ matrix.version }}
          path: artifact.tar.gz

  peformances:
    runs-on: ubuntu-latest
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run
        run: ./scenarios/perfs/run.sh golang
      - name: Display
        run: python scenarios/perfs/process.py
