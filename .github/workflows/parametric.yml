name: Parametric
on:
  workflow_call:

env:
  REGISTRY: ghcr.io
jobs:

  parametric:
    runs-on:
      group: "APM Larger Runners"
    strategy:
      matrix:
          variant:
            #Updated with dev version
            #- client: java
            #  version: dev
            #- client: java
            #  version: prod
            #- client: nodejs
            #  version: dev
            #- client: nodejs
            #  version: prod
            #- client: golang
            #  version: dev
            #- client: golang
            #  version: prod
            #- client: python
            #  version: dev
            #- client: python
            #  version: prod
            #- client: ruby
            #  version: dev
            #- client: ruby
            #  version: prod
            #- client: dotnet
            #  version: dev
            #- client: dotnet
            #  version: prod
            - client: php
              version: dev
            - client: php
              version: prod
            #Pending to update with dev version  
            #- client: cpp
            #  version: prod

 
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.variant.client }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install runner
        uses: ./.github/actions/install_runner
      - name: Load library binary
        if: ${{ matrix.variant.version == 'dev' && matrix.variant.client != 'php' }}
        run: ./utils/scripts/load-binary.sh ${{ matrix.variant.client }}
      - name: Log in to the Container registry
        if: ${{ matrix.variant.version == 'dev' && matrix.variant.client == 'php'}}
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Load PHP library binary
        if: ${{ matrix.variant.version == 'dev' && matrix.variant.client == 'php'}}
        run: ./utils/scripts/load-binary.sh php-lib
      - name: Run
        run: ./run.sh PARAMETRIC
      - name: Compress logs
        id: compress_logs
        if: always()
        run: tar -czvf artifact.tar.gz $(ls | grep logs)
      - name: Upload artifact
        if: always() && steps.compress_logs.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: logs_${{ matrix.variant.client}}_parametric_${{ matrix.variant.version }}_main
          path: artifact.tar.gz
      - name: Upload results CI Visibility
        if: ${{ always() }}
        run: ./utils/scripts/upload_results_CI_visibility.sh ${{ matrix.variant.version }} system-tests ${{ github.run_id }}-${{ github.run_attempt }}
        env:
          DD_API_KEY: ${{ secrets.DD_CI_API_KEY }}
      - name: Print fancy log report
        if: ${{ always() }}
        run: python utils/scripts/markdown_logs.py >> $GITHUB_STEP_SUMMARY
