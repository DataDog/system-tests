name: Parametric
on:
  workflow_call:

env:
  REGISTRY: ghcr.io
jobs:
  parametric:
    runs-on:
      group: "APM Larger Runners"
    strategy:
      matrix:
        client:
        #  - php
        ##  - python
        ##  - python_http
        ##  - dotnet
        #  - golang
        ##  - java
        ##  - nodejs
          - ruby
        #  - cpp
        version:
        # - prod
         - dev
      fail-fast: false
    env:
      TEST_LIBRARY: ${{ matrix.client }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install runner
        uses: ./.github/actions/install_runner
      - name: Load library binary
        if: ${{ matrix.version == 'dev' && matrix.client != 'python_http'}}
        run: ./utils/scripts/load-binary.sh ${{ matrix.client }}
      - name: Load python_http library binary
        if: ${{ matrix.version == 'dev' && matrix.client == 'python_http'}}
        run: ./utils/scripts/load-binary.sh python
      - name: Run
        run: ./run.sh PARAMETRIC

      - name: Compress logs
        id: compress_logs
        if: always()
        run: tar -czvf artifact.tar.gz $(ls | grep logs)
      - name: Upload artifact
        if: always() && steps.compress_logs.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: logs_${{ matrix.client}}_parametric_${{ matrix.version }}_main
          path: artifact.tar.gz
      - name: Upload results CI Visibility
        if: ${{ always() }}
        run: ./utils/scripts/upload_results_CI_visibility.sh ${{ matrix.version }} system-tests ${{ github.run_id }}-${{ github.run_attempt }}
        env:
          DD_API_KEY: ${{ secrets.DD_CI_API_KEY }}
      - name: Print fancy log report
        if: ${{ always() }}
        run: python utils/scripts/markdown_logs.py >> $GITHUB_STEP_SUMMARY
