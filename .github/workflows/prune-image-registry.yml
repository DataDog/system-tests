name: Prune Injection images
on:
  schedule:
    #- cron: '15 3 * * *'
    - cron: '0 */5 * * *'
  push:
    # only trigger on branches, not on tags
    branches: '**'
  workflow_dispatch:

jobs:
  prune-init-images:
    if: ${{ false }} #Enable when Github support fix the problem related to the image versions. 
    name: Prune dd-lib-java-init docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        weblog-variant: 
          - dd-lib-java-init-test-app
          - sample-app
          - dd-lib-python-init-test-django
      fail-fast: false
    steps:
    - name: Prune registry
      uses: vlaurin/action-ghcr-prune@0a539594d122b915e71c59733a5b115bfaaf5d52 #v0.5.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        organization: Datadog
        container: system-tests/${{ matrix.weblog-variant }}
        keep-younger-than: 7 # days
        keep-last: 10
        keep-tags: |
          latest
        prune-tags-regexes: |
          ^[a-z0-9]{40}$
        prune-untagged: true

  clean-images:
    name: Prune docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        weblog-variant: 
         # - dd-lib-java-init-test-app
          - sample-app
          - dd-lib-python-init-test-django
          - dd-lib-python-init-test-django-gunicorn
          - dd-lib-python-init-test-django-uvicorn

      fail-fast: false
    steps:
      - name: Clean images
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            echo "Cleaning images for system-tests/${{ matrix.weblog-variant }}"
            for i in 2{3..500}
            do
            json_response=$(curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${GH_TOKEN}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/orgs/DataDog/packages/container/system-tests%2F${{ matrix.weblog-variant }}/versions?page=$i")
            
            echo "$json_response" | jq '.[].id' | while read -r prune_id; do echo "Deleting node: $prune_id" &&
            curl -L \
              -X DELETE \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${GH_TOKEN}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/orgs/DataDog/packages/container/system-tests%2F${{ matrix.weblog-variant }}/versions/$prune_id;
            
              done;
            
              done