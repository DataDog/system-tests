name: Parametric
on:
  workflow_call:
    inputs:
      library:
        description: "Library to test"
        required: true
        type: string
      binaries_artifact:
        description: "Artifact name containing the binaries to test"
        default: ''
        required: false
        type: string
      ci_environment:
        description: "Which CI environment is running the tests, used for FPD"
        default: 'custom'
        required: false
        type: string

env:
  REGISTRY: ghcr.io
jobs:

  parametric:
    runs-on:
      group: "APM Larger Runners"
    env:
      TEST_LIBRARY: ${{ inputs.library }}
      SYSTEM_TESTS_REPORT_ENVIRONMENT: ${{ inputs.ci_environment }}
      SYSTEM_TESTS_REPORT_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'DataDog/system-tests'
      - name: Install runner
        uses: ./.github/actions/install_runner
      - name: Get binaries artifact
        if : ${{ inputs.binaries_artifact != '' }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.binaries_artifact }}
          path: binaries/

      - name: Load C++ library binary (skipping release tests, use snapshot instead)
        if: ${{ inputs.ci_environment == 'prod' && inputs.library == 'cpp'}}
        run: ./utils/scripts/load-binary.sh ${{ inputs.library }}

      - name: Run parametric tests (with timeout)
        if: ${{ inputs.library == 'java' }}
        run: |
          set +e
          RUN_ATTEMPTS=1
          while [ $RUN_ATTEMPTS -le 3 ]; do
            echo "Running parametric test attempt $RUN_ATTEMPTS"
            timeout 720s ./run.sh PARAMETRIC
            status=$?
            #timneout returns 124 if it times out
            #if the return code is not 124, then we exit with the status
            if [ $status -ne 124 ]; then
              exit $status
              break
            fi
            RUN_ATTEMPTS=$((RUN_ATTEMPTS+1))
            if [ $RUN_ATTEMPTS -eq 4 ]; then
              #Max attempts reached, exit with 124
              exit 124
            fi
          done          
      - name: Run parametric (without timeout)
        if: ${{ inputs.library != 'java' }}
        run: ./run.sh PARAMETRIC
      - name: Compress logs
        id: compress_logs
        if: always()
        run: tar -czvf artifact.tar.gz $(ls | grep logs)
      - name: Upload artifact
        if: always() && steps.compress_logs.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: logs_parametric_${{ inputs.library}}_parametric_${{ inputs.ci_environment }}
          path: artifact.tar.gz
      - name: Upload results CI Visibility
        if: ${{ always() }}
        run: ./utils/scripts/upload_results_CI_visibility.sh ${{ inputs.ci_environment }} system-tests ${{ github.run_id }}-${{ github.run_attempt }}
        env:
          DD_API_KEY: ${{ secrets.DD_CI_API_KEY }}
      - name: Print fancy log report
        if: ${{ always() }}
        run: python utils/scripts/markdown_logs.py >> $GITHUB_STEP_SUMMARY
