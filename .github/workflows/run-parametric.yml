name: Parametric
on:
  workflow_call:
    inputs:
      library:
        description: "Library to test"
        required: true
        type: string
      binaries_artifact:
        description: "Artifact name containing the binaries to test"
        default: ''
        required: false
        type: string
      ci_environment:
        description: "Which CI environment is running the tests, used for FPD"
        default: 'custom'
        required: false
        type: string
      _experimental_job_count:
        description: "How many job should be spawned for the parametric test"
        default: 1
        required: false
        type: number
      _experimental_job_matrix:
        # github action syntax is not very powerfull, it require a job to compute this.
        # => save on job, by asking the caller to compute this list
        description: "Job matrix, JSON array of number from 1 to _experimental_job_count"
        default: '[1]'
        required: false
        type: string

env:
  REGISTRY: ghcr.io
jobs:

  parametric:
    runs-on:
      group: "APM Larger Runners"
    strategy:
      fail-fast: false
      matrix:
        job_instance: ${{ fromJson( inputs._experimental_job_matrix ) }}
    env:
      SYSTEM_TESTS_REPORT_ENVIRONMENT: ${{ inputs.ci_environment }}
      SYSTEM_TESTS_REPORT_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'DataDog/system-tests'
      - name: Install runner
        uses: ./.github/actions/install_runner
      - name: Get binaries artifact
        if : ${{ inputs.binaries_artifact != '' }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.binaries_artifact }}
          path: binaries/
      - name: Run PARAMETRIC scenario
        run: ./run.sh PARAMETRIC -L ${{ inputs.library }} --splits=${{ inputs._experimental_job_count }} --group=${{ matrix.job_instance }}
      - name: Compress logs
        id: compress_logs
        if: always()
        run: tar -czvf artifact.tar.gz $(ls | grep logs)
      - name: Upload artifact
        if: always() && steps.compress_logs.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: logs_parametric_${{ inputs.library}}_parametric_${{ inputs.ci_environment }}_${{ matrix.job_instance }}
          path: artifact.tar.gz
      # - name: Upload results CI Visibility
      #   if: ${{ always() }}
      #   run: ./utils/scripts/upload_results_CI_visibility.sh ${{ inputs.ci_environment }} system-tests ${{ github.run_id }}-${{ github.run_attempt }}
      #   env:
      #     DD_API_KEY: ${{ secrets.DD_CI_API_KEY }}
