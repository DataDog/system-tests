name: Experimental tests

on:
  workflow_dispatch: {}
  schedule:
    - cron:  '00 02 * * 2-6'
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io

jobs:

  injection-tests-java:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lib-injection-connection: ['uds', 'network']
        lib-injection-use-admission-controller: ['', 'use-admission-controller']
      fail-fast: false
    env:
      TEST_LIBRARY: java
      LIBRARY_INJECTION_CONNECTION: ${{ matrix.lib-injection-connection }}
      LIBRARY_INJECTION_ADMISSION_CONTROLLER: ${{ matrix.lib-injection-admission-controller }}
      LIBRARY_INJECTION_INIT_IMAGE: ghcr.io/datadog/dd-trace-java/dd-lib-java-init:34db2f76715dbbe9168806bac7c89c7ad4d51996
      LIBRARY_INJECTION_TEST_APP_IMAGE: ghcr.io/datadog/dd-trace-java/dd-lib-java-init-test-app:34db2f76715dbbe9168806bac7c89c7ad4d51996
    steps:
      - name: Checkout system tests
        uses: actions/checkout@v3

      - name: Build
        run: ./lib-injection/build.sh

      - name: Run
        run: ./lib-injection/run.sh

  injection-tests-node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # node does not support UDS
        lib-injection-connection: ['network']
        lib-injection-use-admission-controller: ['', 'use-admission-controller']
      fail-fast: false
    env:
      TEST_LIBRARY: nodejs
      LIBRARY_INJECTION_CONNECTION: ${{ matrix.lib-injection-connection }}
      LIBRARY_INJECTION_ADMISSION_CONTROLLER: ${{ matrix.lib-injection-admission-controller }}
      LIBRARY_INJECTION_INIT_IMAGE: ghcr.io/datadog/dd-trace-js/dd-lib-js-init:e1043d06c7b25f5494a80d3c95e43029ac5cefff
      LIBRARY_INJECTION_TEST_APP_IMAGE: ghcr.io/datadog/dd-trace-js/sample-app:45cb74896b0b528d23b1458c9cacfa9b296658ba
    steps:
      - name: Checkout system tests
        uses: actions/checkout@v3

      - name: Build
        run: ./lib-injection/build.sh

      - name: Run
        run: ./lib-injection/run.sh

  injection-tests-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lib-injection-connection: ['uds', 'network']
        lib-injection-use-admission-controller: ['', 'use-admission-controller']
      fail-fast: false
    env:
      TEST_LIBRARY: python
      LIBRARY_INJECTION_CONNECTION: ${{ matrix.lib-injection-connection }}
      LIBRARY_INJECTION_ADMISSION_CONTROLLER: ${{ matrix.lib-injection-admission-controller }}
      LIBRARY_INJECTION_INIT_IMAGE: ghcr.io/datadog/dd-trace-py/dd-lib-python-init:5f62ab0bbec26cef23f16f3165460e61c2c1eba5
      LIBRARY_INJECTION_TEST_APP_IMAGE: ghcr.io/datadog/dd-trace-py/dd-lib-python-init-test-app:5f62ab0bbec26cef23f16f3165460e61c2c1eba5
    steps:
      - name: Checkout system tests
        uses: actions/checkout@v3

      - name: Build
        run: ./lib-injection/build.sh

      - name: Run
        run: ./lib-injection/run.sh

  peformances:
    runs-on: ubuntu-latest
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run
        run: ./scenarios/perfs/run.sh golang
      - name: Display
        run: python scenarios/perfs/process.py

  fuzzer:
    runs-on: ubuntu-latest
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: ./build.sh golang
      - name: Run
        run: ./run.sh scenarios/fuzzer/main.py -t 60
        env:
          RUNNER_CMD: python

  parametric:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        client: ['python', 'dotnet', 'golang', 'nodejs']
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          # FIXME: pytest==5.4.3 does not support Python 3.10
          python-version: '3.9'
      - name: Install
        run: |
          pip install wheel
      - name: Run
        run: |
          cd parametric
          pip install -r requirements.txt
          CLIENTS_ENABLED=${{ matrix.client }} ./run.sh
