name: External-processing tests

on:
  workflow_call:
    inputs:
      ci_environment:
        description: "Which CI environment is running the tests, used for FPD"
        default: 'custom'
        required: false
        type: string
      build_proxy_image:
        description: "Shall we build proxy image"
        default: false
        required: false
        type: boolean

env:
  REGISTRY: ghcr.io


jobs:
  external-processing:
    runs-on:
      group: "APM Larger Runners"

    env:
      SYSTEM_TESTS_REPORT_ENVIRONMENT: ${{ inputs.ci_environment }}
      SYSTEM_TESTS_REPORT_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'DataDog/system-tests'
      - name: Install runner
        uses: ./.github/actions/install_runner

      - name: Log in to the Container registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Pull images
        uses: ./.github/actions/pull_images
        with:
          library: golang
          weblog: golang-dummy
          scenarios: '["EXTERNAL_PROCESSING"]'

      - name: Build proxy image
        if: inputs.build_proxy_image
        run: ./build.sh -i proxy

      - name: Build agent image
        run: ./build.sh -i agent

      - name: Run EXTERNAL_PROCESSING scenario
        run: ./run.sh EXTERNAL_PROCESSING
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}

      - name: Compress logs
        id: compress_logs
        if: always() && steps.build.outcome == 'success'
        run: tar -czvf artifact.tar.gz $(ls | grep logs)
      - name: Upload artifact
        if: always() && steps.compress_logs.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: logs_externalprocessing_golang_golang-dummy_${{ inputs.ci_environment }}
          path: artifact.tar.gz
